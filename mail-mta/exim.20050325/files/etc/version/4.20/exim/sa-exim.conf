# Options for spamassassin running in exim's local_scan (SA Exim)
# By Marc MERLIN <marc_soft@merlins.org> - Initial version: April 2002
#
# Sample file version 1.10 for SA-Exim 3.0 - 2003/04/30 
#
# The parse routine is minimalistic. It expects "option: value" (exactly one
# space after the colon, and none before).
# SA threshold values are parsed as floats and other numerical options are ints
# String options have to be set. To unset them, comment out the variable, don't
# set it to nothing.
# Don't screw things up or you will get one error log entry per Email you
# receive :-)
# --- snip ---

SAEximDebug: 1

################################################################################
# NOTE: The values for  SA thresholds only work if  spamassassin has already
# flagged the message as spam. In other words, you cannot reject mails on SA
# scores  if  you  set  that  threshold  to  a  lower  threshold  than  SA's
# required_hits value.
# It's a design decision but if you really want, you can change it in the code
################################################################################

# Default path is /usr/bin/spamc, but you can change it here
SAspamcpath: /usr/bin/spamc



# Exim configuration string to run before running SA against the message
# You should not put double quotes around the expression
# This decides whether SA gets run against the message or not. Messages will
# not be rejected if the message had SA headers but weren't added by us
# If you comment this out, SA will be disabled
# Watch your logs, you will get errors and your messages will get temporarily
# bounced if the expansion fails
# Anything that doesn't expand to "" or "0" (without quotes) will be considered
# true If you set the string to 1, it will be true without going through exim's
# condition evaluator (and if you leave it unset, it will default to 0)
SAEximRunCond: ${if and {{def:sender_host_address} {!eq {$sender_host_address}{127.0.0.1}} {!eq {$h_X-SA-Do-Not-Run:}{Yes}} } {1}{0}}
SAEximRunCond: 0

# If and only if SAEximRunCond was true, and we did run SA, this expression
# decides whether we actually consider acting upon SAdevnull, SApermreject,
# and SAtempreject if you have them set. 
# This lets you tag messages that you shouldn't reject (messages sent to abuse
# or postmaster for instance)
# X-SA-Do-Not-Rej should be set as a warn header if mail is sent to postmaster
# and abuse (in the RCPT ACL), this way you're not bouncing spam abuse reports
# sent to you
# You should not put double quotes around the expression Watch your logs,
# you will get errors and your messages will get temporarily bounced if the
# expansion fails 
# Anything that doesn't expand to "" or "0" (without quotes) will be considered
# true If you set the string to 1, it will be true without going through exim's
# condition evaluator (and if you leave it unset, it will default to 1)
SAEximRejCond: ${if !eq {$h_X-SA-Do-Not-Rej:}{Yes} {1}{0}}


# How much of the body we feed to spamassassin (in bytes)
# Default is 250KB
SAmaxbody: 256000

# Do you want to feed SAmaxbody's worth of the message body if it is too big
# Note that SA will sometimes score the message negatively if it can't parse
# the message correctly (since the end is missing, decoding will fail)
# Default is 0: do not scan messages that are too big
# (note that this is parsed as a condition)
SATruncBodyCond: 0

# On errors, if you are saving messages, you probably want the entire message
# If you are archiving messages that are rejected, how much to you want to
# archive? Default is 20MB.
# Note that if saving of messages that generated errors is enabled, they will
# be saved in their entirety
SAmaxarchivebody: 20971520

# On errors, if you are saving messages, you probably want the entire message
# Default size saved (if you are saving errors) is 1GB
SAerrmaxarchivebody: 1073741824

# You can have SA-Exim add a X-SA-Exim-Rcpt-To header, which will list all
# the receipients for the Email, unless the list gets bigger than 
# SAmaxrcptlistlength bytes.
# The default value of 0 disables the header for privacy reasons (the header
# exposes Bcced receipients)
# Any value bigger than 8000 will be ignored because there is a limit on the
# size of headers that you can have and exim's string_sprintf
SAmaxrcptlistlength: 0

# How many seconds you want to allow spamc to run. Exim 4.04 will kill us after
# a default of 5 minutes. This however is not great, because the mail gets
# temporarily rejected 
# You should set this and have SA Exim handle the timeout itself and accept the
# message A value of 0 means no timeout, and we run until exim stops us. I know
# at least one mail server (nanog's merit.edu) that will not wait a full 5mn, so
# the default is 4mn
#SAtimeout: 240

# Do you want to save mails that were accepted because spamc timed out?
# Specify a directory to enable the feature.
# SA-Exim will try to create the directory if it has the permissions to do so,
# check your maillog for failures (or create the directory yourself and make it
# writeable for exim)
SAtimeoutsave: /var/spool/exim/sa/timeoutsave

# You can optionally save or not save messages that matched the above rule
# You should not put double quotes around the expression
# Watch your logs, you will get errors and your messages will get temporarily
# bounced if the expansion fails
# Anything that doesn't expand to "" or "0" (without quotes) will be considered
# true If you set the string to 1, it will be true without going through exim's
# condition evaluator (and if you leave it unset, it will default to 1)
SAtimeoutSavCond: 1



# You should really create this directory for local_scan to save messages that
# created an error. If you don't want this, comment out this variable
# Make sure all these directories are owned by the exim user
# SA-Exim will try to  create the directory if it has  the permissions to do
# so, check your maillog for failures  (or create the directory yourself and
# make it writeable for exim)
SAerrorsave: /var/spool/exim/sa/errorsave

# You can optionally save or not save messages that matched the above rule
# You should not put double quotes around the expression
# Watch your logs, you will get errors and your messages will get temporarily
# bounced if the expansion fails
# Anything that doesn't expand to "" or "0" (without quotes) will be considered
# true If you set the string to 1, it will be true without going through exim's
# condition evaluator (and if you leave it unset, it will default to 1)
SAerrorSavCond: 1

# If you set to 1, SA will temporarily reject messages that generated an error
# while they were processed (they'll still be saved if SAerrorsave is set).
# Otherwise, the messages are just accepted
SAtemprejectonerror: 0



# SA score when you start stalling the sender by sending many continuation
# lines for up to SAteergrubetime
# Note that this is an obvious abuse of SMTP, but eh, they started it :-)
# Of course, this means that each incoming spam with the right score threshold
# will keep an exim process busy on your machine. Make sure you can afford it.
# Default value is 2^30, which should disable the behavior
SAteergrube: 25.0

# Please, don't teergrube people you relay for you or your own MXes :-)
#SAteergrubecond: ${if and { {!eq {$sender_host_address}{127.0.0.1}} {!eq {$sender_host_address}{127.0.0.2}} } {1}{0}}

# How long do you want to stall the sender (in seconds)
# If you set the value too high, you might get too many exim processes running
# and run out of process slots
# Remember, don't come crying if playing with this "feature" causes your mail
# server to catch fire :-)
SAteergrubetime: 900

# You can optionally save or not save messages that matched the above rule
# You should not put double quotes around the expression
# Watch your logs, you will get errors and your messages will get temporarily
# bounced if the expansion fails
# Anything that doesn't expand to "" or "0" (without quotes) will be considered
# true If you set the string to 1, it will be true without going through exim's
# condition evaluator (and if you leave it unset, it will default to 1)
SAteergrubeSavCond: 1

# Do you want to save mails that you stalled for later analysis?
# Specify a directory to enable the feature.
# SA-Exim will try to create the directory if it has the permissions to do so,
# check your maillog for failures (or create the directory yourself and make it
# writeable for exim)
SAteergrubesave: /var/spool/exim/sa/teergrube

# When you stall the sender, you will probably get the mail again.
# By default, we'll  only save messages by message ID so  that we don't save
# multiple copies every time the sender tries again.
# Of course, this means someone could fake someone else's message ID to
# overwrite the saved copy of another spam. Such is life :-)
SAteergrubeoverwrite: 1



# SAstallsender is still supported by the code for now, but it was
# removed from this configuration sample file as it is deprecated. If
# you are intent on spending some of your resources to slow spammers
# down, you should use SAteergrube instead



# If you reach this score, the mail is accepted and tossed (/dev/nulled)
# The default value is 2^30 which should ensure this never happens.
# You should be real sure that the message is spam because the sender will
# get no notification
#SAdevnull: 20.0

# You can optionally save or not save messages that matched the above rule
# You should not put double quotes around the expression
# Watch your logs, you will get errors and your messages will get temporarily
# bounced if the expansion fails
# Anything that doesn't expand to "" or "0" (without quotes) will be considered
# true If you set the string to 1, it will be true without going through exim's
# condition evaluator (and if you leave it unset, it will default to 1)
SAdevnullSavCond: 1

# Do you want to save mails that are tossed?
# Specify a directory to enable the feature.
# This is just in case you do want to keep a copy of the alledge spams somewhere
# Messages are saved by unixdate_Message-Id or just unix date if there is no
# Message-Id:
# SA-Exim will try to create the directory if it has the permissions to do so,
# check your maillog for failures (or create the directory yourself and make it
# writeable for exim)
SAdevnullsave: /var/spool/exim/sa/devnull



# SA score when you start rejecting Emails. In this case you bother rejecting
# it just in case it might not be spam (to let the sender know)
# Default value is 2^30, which should disable the behavior if you comment out
# the line below
SApermreject: 12.0

# You can optionally save or not save messages that matched the above rule
# You should not put double quotes around the expression
# Watch your logs, you will get errors and your messages will get temporarily
# bounced if the expansion fails
# Anything that doesn't expand to "" or "0" (without quotes) will be considered
# true If you set the string to 1, it will be true without going through exim's
# condition evaluator (and if you leave it unset, it will default to 1)
SApermrejectSavCond: 1

# Do you want to save mails that are rejected?
# Specify a directory to enable the feature.
# SA-Exim will try to create the directory if it has the permissions to do so,
# check your maillog for failures (or create the directory yourself and make it
# writeable for exim)
SApermrejectsave: /var/spool/exim/sa/permreject



# SA score when you start returning a temporary reject (few reasons to use
# this, but it's there just in case)
# Default value is 2^30, which should disable the behavior
SAtempreject: 10.0

# You can optionally save or not save messages that matched the above rule
# You should not put double quotes around the expression
# Watch your logs, you will get errors and your messages will get temporarily
# bounced if the expansion fails
# Anything that doesn't expand to "" or "0" (without quotes) will be considered
# true If you set the string to 1, it will be true without going through exim's
# condition evaluator (and if you leave it unset, it will default to 1)
SAtemprejectSavCond: 1

# Do you want to save mails that are temporarily rejected?
# Specify a directory to enable the feature.
# You could use this to analyse what SA is bouncing and adding an allow rule
# to accept the mail next time it is sent back to you
# SA-Exim will try to create the directory if it has the permissions to do so,
# check your maillog for failures (or create the directory yourself and make it
# writeable for exim)
SAtemprejectsave: /var/spool/exim/sa/tempreject

# When you send back a temp reject code, you will get the mail again.
# By default, we'll  only save messages by message ID so  that we don't save
# multiple copies every time the sender tries again.
# Of course, this means someone could fake someone else's message ID to
# overwrite the saved copy of another spam. Such is life :-)
SAtemprejectoverwrite: 1



# Do you want to save mails that are flagged as spam by SA, but not rejected by
# any of the above thresholds?  Specify a directory to enable the feature.
# That's one way to track mails thare are going through even though they were
# flagged by SA (note that you could also save them in exim's system_filter,
# although copies saved here happen before exim makes modification to the
# message like rewriting)
# SA-Exim will try to create the directory if it has the permissions to do so,
# check your maillog for failures (or create the directory yourself and make it
# writeable for exim)
SAspamacceptsave: /var/spool/exim/sa/spamaccept

# You can control which messages you want saved if you only want a subset You
# should not put double quotes around the expression 
# Watch your logs, you will get errors and your messages will get temporarily
# bounced if the expansion fails
# Anything that doesn't expand to "" or "0" (without quotes) will be considered
# true If you set the string to 1, it will be true without going through exim's
# condition evaluator (and if you leave it unset, it will default to 0)
SAspamacceptSavCond: 1



# Do you want to save mails that are not flagged as spam by SA
# Specify a directory to enable the feature.
# This is only here for completeness, if you want to save all messages not
# flagged as spam by SA (you could also do this in system_filter)
# SA-Exim will try to create the directory if it has the permissions to do so,
# check your maillog for failures (or create the directory yourself and make it
# writeable for exim)
SAnotspamsave: /var/spool/exim/sa/notspam

# You can control which messages you want saved if you only want a subset
# You should not put double quotes around the expression
# Watch your logs, you will get errors and your messages will get temporarily
# bounced if the expansion fails
# Anything that doesn't expand to "" or "0" (without quotes) will be considered
# true If you set the string to 1, it will be true without going through exim's
# condition evaluator (and if you leave it unset, it will default to 0)
SAnotspamSavCond: 0

# All the following strings can take one '%s' which will be replaced by
# spamstatus: "SA score, trigger score"
SAmsgteergrubewait: "wait for more output"
SAmsgteergruberej: "Please try again later"
SAmsgstallrej: "Please try again later"
SAmsgpermrej: "Rejected"
SAmsgtemprej: "Please try again later"
# This string is a static string, do not include "%s"
SAmsgerror: "Temporary local error while processing message, please contact postmaster"
