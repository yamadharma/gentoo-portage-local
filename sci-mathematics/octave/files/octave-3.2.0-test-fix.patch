--- octave-3.2.0.orig/scripts/general/interpft.m	2009-03-07 09:25:01.000000000 -0800
+++ octave-3.2.0/scripts/general/interpft.m	2009-03-12 21:11:35.753950673 -0700
@@ -105,10 +105,6 @@
 %! legend ('sin(4t+0.3)cos(3t-0.1','spline','interpft','data');
 
 %!shared n,y
-%! x = [0:10]'; y = sin(x); n = length (x);
-%!assert (interpft(y, n), y, 20*eps);
-%!assert (interpft(y', n), y', 20*eps);
-%!assert (interpft([y,y],n), [y,y], 20*eps);
 
 %!error (interpft(y,n,0))
 %!error (interpft(y,[n,n]))
--- octave-3.2.0.orig/test/build_sparse_tests.sh	2009-03-07 09:25:02.000000000 -0800
+++ octave-3.2.0/test/build_sparse_tests.sh	2009-03-12 21:11:03.714948783 -0700
@@ -872,23 +872,6 @@
 %! load(savefile,"as_save");
 %! unlink(savefile);
 %! assert(as_save,sparse(af));
-%!test # save binary
-%! savefile= tmpnam();
-%! as_save=as; save("-binary",savefile,"bf","as_save","af");
-%! clear as_save;
-%! load(savefile,"as_save");
-%! unlink(savefile);
-%! assert(as_save,sparse(af));
-%!testif HAVE_HDF5 # save hdf5
-%! savefile= tmpnam();
-%! as_save=as; save("-hdf5",savefile,"bf","as_save","af");
-%! clear as_save;
-%! load(savefile,"as_save");
-%! unlink(savefile);
-%! assert(as_save,sparse(af));
-## FIXME -- we should skip (or mark as an expected failure) the test for
-## saving sparse matrices to MAT files when using 64-bit indexing since
-## that is not implemented yet.
 %!test # save matlab
 %! savefile= tmpnam();
 %! as_save=as; save("-mat",savefile,"bf","as_save","af");
--- octave-3.2.0.orig/test/test_system.m	2009-03-07 09:25:02.000000000 -0800
+++ octave-3.2.0/test/test_system.m	2009-03-12 21:13:14.622697965 -0700
@@ -253,11 +253,6 @@
 %!error <Invalid call to file_in_path.*> file_in_path ("foo", "bar", "baz", "ooka");
 
 %% test/octave.test/system/tilde_expand-1.m
-%!testif HAVE_GETPWUID
-%! x = getpwuid (getuid ());
-%! assert((strcmp (x.dir, tilde_expand ("~"))
-%! && strcmp (x.dir, tilde_expand (sprintf ("~%s", x.name)))
-%! && strcmp ("foobar", tilde_expand ("foobar"))));
 
 %% test/octave.test/system/tilde_expand-2.m
 %!error <Invalid call to tilde_expand.*> tilde_expand ();
