--- linux/sound/isa/sb/es968.c	2003-07-01 14:49:36.000000000 +0200
+++ linux/sound/isa/sb/es968.c	2003-07-01 14:58:41.000000000 +0200
@@ -23,11 +23,12 @@
 #include <sound/driver.h>
 #include <linux/init.h>
 #include <linux/time.h>
-#include <linux/pnp.h>
+#include <sound/pnp.h>
 #include <sound/core.h>
 #define SNDRV_GET_ID
 #include <sound/initval.h>
 #include <sound/sb.h>
+#include "es968.isapnp"
 
 #define chip_t sb_t
 
--- /dev/null	2003-07-01 15:11:22.000000000 +0200
+++ linux/sound/isa/sb/sb16.isapnp	2003-07-01 15:02:21.000000000 +0200
@@ -0,0 +1,102 @@
+/*
+ * This file is autogenerated by the alsa-driver/utils/convert_isapnp_ids script...
+ * DO NOT EDIT!!!
+ * Source file: 
+ */
+
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2, 5, 0)
+
+static struct isapnp_card_id snd_sb16_pnpids_old[] __devinitdata = {
+
+        /* Sound Blaster 16 PnP */
+	{ ISAPNP_CARD_ID('C', 'T', 'L', 0x0024),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0031),
+	  }
+	},
+        /* Sound Blaster 16 PnP */
+	{ ISAPNP_CARD_ID('C', 'T', 'L', 0x0025),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0031),
+	  }
+	},
+        /* Sound Blaster 16 PnP */
+	{ ISAPNP_CARD_ID('C', 'T', 'L', 0x0026),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0031),
+	  }
+	},
+        /* Sound Blaster 16 PnP */
+	{ ISAPNP_CARD_ID('C', 'T', 'L', 0x0027),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0031),
+	  }
+	},
+        /* Sound Blaster 16 PnP */
+	{ ISAPNP_CARD_ID('C', 'T', 'L', 0x0028),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0031),
+	  }
+	},
+        /* Sound Blaster 16 PnP */
+	{ ISAPNP_CARD_ID('C', 'T', 'L', 0x0029),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0031),
+	  }
+	},
+        /* Sound Blaster 16 PnP */
+	{ ISAPNP_CARD_ID('C', 'T', 'L', 0x002a),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0031),
+	  }
+	},
+        /* Sound Blaster 16 PnP */
+        /* Note: This card has also a CTL0051:StereoEnhance device!!! */
+	{ ISAPNP_CARD_ID('C', 'T', 'L', 0x002b),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0031),
+	  }
+	},
+        /* Sound Blaster 16 PnP */
+	{ ISAPNP_CARD_ID('C', 'T', 'L', 0x002c),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0031),
+	  }
+	},
+        /* Sound Blaster Vibra16S */
+	{ ISAPNP_CARD_ID('C', 'T', 'L', 0x0051),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0001),
+	  }
+	},
+        /* Sound Blaster Vibra16C */
+	{ ISAPNP_CARD_ID('C', 'T', 'L', 0x0070),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0001),
+	  }
+	},
+        /* Sound Blaster Vibra16CL - added by ctm@ardi.com */
+	{ ISAPNP_CARD_ID('C', 'T', 'L', 0x0080),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0041),
+	  }
+	},
+        /* Sound Blaster 16 'value' PnP. It says model ct4130 on the pcb, */
+        /* but ct4131 on a sticker on the board.. */
+	{ ISAPNP_CARD_ID('C', 'T', 'L', 0x0086),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0041),
+	  }
+	},
+        /* Sound Blaster Vibra16X */
+	{ ISAPNP_CARD_ID('C', 'T', 'L', 0x00f0),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0043),
+	  }
+	},
+	{ ISAPNP_CARD_END, }
+};
+
+ISAPNP_CARD_TABLE(snd_sb16_pnpids_old);
+
+#endif /* 2.5.0 */
--- linux/sound/isa/sb/sb16.c	2003-07-01 14:49:36.000000000 +0200
+++ linux/sound/isa/sb/sb16.c	2003-07-01 15:11:12.000000000 +0200
@@ -23,7 +23,7 @@
 #include <asm/dma.h>
 #include <linux/init.h>
 #include <linux/slab.h>
-#include <linux/pnp.h>
+#include <sound/pnp.h>
 #include <sound/core.h>
 #include <sound/sb.h>
 #include <sound/sb16_csp.h>
@@ -36,6 +36,11 @@
 #define SNDRV_LEGACY_FIND_FREE_DMA
 #define SNDRV_GET_ID
 #include <sound/initval.h>
+#ifdef SNDRV_SBAWE
+#include "sbawe.isapnp"
+#else
+#include "sb16.isapnp"
+#endif
 
 #define chip_t sb_t
 
--- /dev/null	2003-07-01 15:10:19.000000000 +0200
+++ linux/sound/isa/sb/es968.isapnp	2003-07-01 15:02:21.000000000 +0200
@@ -0,0 +1,20 @@
+/*
+ * This file is autogenerated by the alsa-driver/utils/convert_isapnp_ids script...
+ * DO NOT EDIT!!!
+ * Source file: 
+ */
+
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2, 5, 0)
+
+static struct isapnp_card_id snd_es968_pnpids_old[] __devinitdata = {
+	{ ISAPNP_CARD_ID('E', 'S', 'S', 0x0968),
+	  .devs = {
+		ISAPNP_DEVICE_ID('@', '@', '@', 0x0968),
+	  }
+	},
+	{ ISAPNP_CARD_END, }
+};
+
+ISAPNP_CARD_TABLE(snd_es968_pnpids_old);
+
+#endif /* 2.5.0 */
--- /dev/null	2003-07-01 15:11:17.000000000 +0200
+++ linux/sound/isa/sb/sbawe.isapnp	2003-07-01 15:02:21.000000000 +0200
@@ -0,0 +1,210 @@
+/*
+ * This file is autogenerated by the alsa-driver/utils/convert_isapnp_ids script...
+ * DO NOT EDIT!!!
+ * Source file: 
+ */
+
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2, 5, 0)
+
+static struct isapnp_card_id snd_sb16_pnpids_old[] __devinitdata = {
+        /* Sound Blaster AWE 32 PnP */
+	{ ISAPNP_CARD_ID('C', 'T', 'L', 0x0035),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0031),
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0021),
+	  }
+	},
+        /* Sound Blaster AWE 32 PnP */
+	{ ISAPNP_CARD_ID('C', 'T', 'L', 0x0039),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0031),
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0021),
+	  }
+	},
+        /* Sound Blaster AWE 32 PnP */
+	{ ISAPNP_CARD_ID('C', 'T', 'L', 0x0042),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0031),
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0021),
+	  }
+	},
+        /* Sound Blaster AWE 32 PnP */
+	{ ISAPNP_CARD_ID('C', 'T', 'L', 0x0043),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0031),
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0021),
+	  }
+	},
+        /* Sound Blaster AWE 32 PnP */
+        /* Note: This card has also a CTL0051:StereoEnhance device!!! */
+	{ ISAPNP_CARD_ID('C', 'T', 'L', 0x0044),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0031),
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0021),
+	  }
+	},
+        /* Sound Blaster AWE 32 PnP */
+        /* Note: This card has also a CTL0051:StereoEnhance device!!! */
+	{ ISAPNP_CARD_ID('C', 'T', 'L', 0x0045),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0031),
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0021),
+	  }
+	},
+        /* Sound Blaster AWE 32 PnP */
+	{ ISAPNP_CARD_ID('C', 'T', 'L', 0x0046),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0031),
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0021),
+	  }
+	},
+        /* Sound Blaster AWE 32 PnP */
+	{ ISAPNP_CARD_ID('C', 'T', 'L', 0x0047),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0031),
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0021),
+	  }
+	},
+        /* Sound Blaster AWE 32 PnP */
+	{ ISAPNP_CARD_ID('C', 'T', 'L', 0x0048),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0031),
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0021),
+	  }
+	},
+        /* Sound Blaster AWE 32 PnP */
+	{ ISAPNP_CARD_ID('C', 'T', 'L', 0x0054),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0031),
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0021),
+	  }
+	},
+        /* Sound Blaster AWE 32 PnP */
+	{ ISAPNP_CARD_ID('C', 'T', 'L', 0x009a),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0041),
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0021),
+	  }
+	},
+        /* Sound Blaster AWE 32 PnP */
+	{ ISAPNP_CARD_ID('C', 'T', 'L', 0x009c),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0041),
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0021),
+	  }
+	},
+        /* Sound Blaster 32 PnP */
+	{ ISAPNP_CARD_ID('C', 'T', 'L', 0x009f),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0041),
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0021),
+	  }
+	},
+        /* Sound Blaster AWE 64 PnP */
+	{ ISAPNP_CARD_ID('C', 'T', 'L', 0x009d),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0042),
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0022),
+	  }
+	},
+        /* Sound Blaster AWE 64 PnP Gold */
+	{ ISAPNP_CARD_ID('C', 'T', 'L', 0x009e),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0044),
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0023),
+	  }
+	},
+        /* Sound Blaster AWE 64 PnP Gold */
+	{ ISAPNP_CARD_ID('C', 'T', 'L', 0x00b2),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0044),
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0023),
+	  }
+	},
+        /* Sound Blaster AWE 64 PnP */
+	{ ISAPNP_CARD_ID('C', 'T', 'L', 0x00c1),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0042),
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0022),
+	  }
+	},
+        /* Sound Blaster AWE 64 PnP */
+	{ ISAPNP_CARD_ID('C', 'T', 'L', 0x00c3),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0045),
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0022),
+	  }
+	},
+        /* Sound Blaster AWE 64 PnP */
+	{ ISAPNP_CARD_ID('C', 'T', 'L', 0x00c5),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0045),
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0022),
+	  }
+	},
+        /* Sound Blaster AWE 64 PnP */
+	{ ISAPNP_CARD_ID('C', 'T', 'L', 0x00c7),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0045),
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0022),
+	  }
+	},
+        /* Sound Blaster AWE 64 PnP */
+	{ ISAPNP_CARD_ID('C', 'T', 'L', 0x00e4),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0045),
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0022),
+	  }
+	},
+        /* Sound Blaster AWE 64 PnP */
+	{ ISAPNP_CARD_ID('C', 'T', 'L', 0x00e9),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0045),
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0022),
+	  }
+	},
+        /* Sound Blaster 16 PnP (AWE) */
+	{ ISAPNP_CARD_ID('C', 'T', 'L', 0x00ed),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0041),
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0070),
+	  }
+	},
+        /* Generic entries */
+	{ ISAPNP_CARD_ID('C', 'T', 'L', ISAPNP_ANY_ID),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0031),
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0021),
+	  }
+	},
+	{ ISAPNP_CARD_ID('C', 'T', 'L', ISAPNP_ANY_ID),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0041),
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0021),
+	  }
+	},
+	{ ISAPNP_CARD_ID('C', 'T', 'L', ISAPNP_ANY_ID),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0042),
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0022),
+	  }
+	},
+	{ ISAPNP_CARD_ID('C', 'T', 'L', ISAPNP_ANY_ID),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0044),
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0023),
+	  }
+	},
+	{ ISAPNP_CARD_ID('C', 'T', 'L', ISAPNP_ANY_ID),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0045),
+		ISAPNP_DEVICE_ID('C', 'T', 'L', 0x0022),
+	  }
+	},
+
+	{ ISAPNP_CARD_END, }
+};
+
+ISAPNP_CARD_TABLE(snd_sb16_pnpids_old);
+
+#endif /* 2.5.0 */
--- linux/sound/isa/gus/interwave.c	2003-07-01 14:49:42.000000000 +0200
+++ linux/sound/isa/gus/interwave.c	2003-07-01 15:01:11.000000000 +0200
@@ -27,7 +27,7 @@
 #include <linux/delay.h>
 #include <linux/init.h>
 #include <linux/slab.h>
-#include <linux/pnp.h>
+#include <sound/pnp.h>
 #include <sound/core.h>
 #include <sound/gus.h>
 #include <sound/cs4231.h>
@@ -39,6 +39,7 @@
 #define SNDRV_LEGACY_FIND_FREE_DMA
 #define SNDRV_GET_ID
 #include <sound/initval.h>
+#include "interwave.isapnp"
 
 MODULE_AUTHOR("Jaroslav Kysela <perex@suse.cz>");
 MODULE_CLASSES("{sound}");
--- /dev/null	2003-04-26 19:12:18.000000000 +0200
+++ linux/sound/isa/gus/interwave.isapnp	2003-07-01 15:22:10.000000000 +0200
@@ -0,0 +1,51 @@
+/*
+ * This file is autogenerated by the alsa-driver/utils/convert_isapnp_ids script...
+ * DO NOT EDIT!!!
+ * Source file: 
+ */
+
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2, 5, 0)
+
+static struct isapnp_card_id snd_interwave_pnpids_old[] __devinitdata = {
+
+        /* Gravis UltraSound Plug & Play */
+	{ ISAPNP_CARD_ID('G', 'R', 'V', 0x0001),
+	  .devs = {
+		ISAPNP_DEVICE_ID('G', 'R', 'V', 0x0000),
+	  }
+	},
+        /* STB SoundRage32 */
+	{ ISAPNP_CARD_ID('S', 'T', 'B', 0x011a),
+	  .devs = {
+		ISAPNP_DEVICE_ID('S', 'T', 'B', 0x0010),
+	  }
+	},
+        /* MED3210 */
+	{ ISAPNP_CARD_ID('D', 'X', 'P', 0x3201),
+	  .devs = {
+		ISAPNP_DEVICE_ID('D', 'X', 'P', 0x0010),
+	  }
+	},
+        /* Dynasonic Pro */
+        /* This device also have CDC1117:DynaSonix Pro Audio Effects Processor */
+	{ ISAPNP_CARD_ID('C', 'D', 'C', 0x1111),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'D', 'C', 0x1112),
+	  }
+	},
+        /* Panasonic PCA761AW Audio Card */
+	{ ISAPNP_CARD_ID('A', 'D', 'V', 0x55ff),
+	  .devs = {
+		ISAPNP_DEVICE_ID('A', 'D', 'V', 0x0010),
+	  }
+	},
+
+
+
+
+	{ ISAPNP_CARD_END, }
+};
+
+ISAPNP_CARD_TABLE(snd_interwave_pnpids_old);
+
+#endif /* 2.5.0 */
--- linux/sound/isa/dt019x.c	2003-07-01 14:50:53.000000000 +0200
+++ linux/sound/isa/dt019x.c	2003-07-01 14:59:52.000000000 +0200
@@ -25,13 +25,14 @@
 #include <linux/init.h>
 #include <linux/sched.h>
 #include <linux/wait.h>
-#include <linux/pnp.h>
+#include <sound/pnp.h>
 #include <sound/core.h>
 #define SNDRV_GET_ID
 #include <sound/initval.h>
 #include <sound/mpu401.h>
 #include <sound/opl3.h>
 #include <sound/sb.h>
+#include "dt019x.isapnp"
 
 #define chip_t sb_t
 
--- linux/sound/isa/sscape.c	2003-07-01 14:50:08.000000000 +0200
+++ linux/sound/isa/sscape.c	2003-07-01 15:00:25.000000000 +0200
@@ -28,7 +28,7 @@
 #include <sound/driver.h>
 #include <linux/init.h>
 #include <linux/delay.h>
-#include <linux/pnp.h>
+#include <sound/pnp.h>
 #include <linux/spinlock.h>
 #include <asm/dma.h>
 #include <sound/core.h>
@@ -36,6 +36,7 @@
 #include <sound/cs4231.h>
 #include <sound/mpu401.h>
 #include <sound/initval.h>
+#include "sscape.isapnp"
 
 #include <sound/sscape_ioctl.h>
 
--- /dev/null	2003-07-01 15:09:47.000000000 +0200
+++ linux/sound/isa/es18xx.isapnp	2003-07-01 15:02:26.000000000 +0200
@@ -0,0 +1,65 @@
+/*
+ * This file is autogenerated by the alsa-driver/utils/convert_isapnp_ids script...
+ * DO NOT EDIT!!!
+ * Source file: 
+ */
+
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2, 5, 0)
+
+static struct isapnp_card_id snd_audiodrive_pnpids_old[] __devinitdata = {
+        /* ESS 1868 (integrated on Compaq dual P-Pro motherboard and Genius 18PnP 3D) */
+	{ ISAPNP_CARD_ID('E', 'S', 'S', 0x1868),
+	  .devs = {
+		ISAPNP_DEVICE_ID('E', 'S', 'S', 0x1868),
+		ISAPNP_DEVICE_ID('E', 'S', 'S', 0x0000),
+	  }
+	},
+        /* ESS 1868 (integrated on Maxisound Cards) */
+	{ ISAPNP_CARD_ID('E', 'S', 'S', 0x1868),
+	  .devs = {
+		ISAPNP_DEVICE_ID('E', 'S', 'S', 0x8601),
+		ISAPNP_DEVICE_ID('E', 'S', 'S', 0x8600),
+	  }
+	},
+        /* ESS 1868 (integrated on Maxisound Cards) */
+	{ ISAPNP_CARD_ID('E', 'S', 'S', 0x1868),
+	  .devs = {
+		ISAPNP_DEVICE_ID('E', 'S', 'S', 0x8611),
+		ISAPNP_DEVICE_ID('E', 'S', 'S', 0x8610),
+	  }
+	},
+        /* ESS ES1869 Plug and Play AudioDrive */
+	{ ISAPNP_CARD_ID('E', 'S', 'S', 0x0003),
+	  .devs = {
+		ISAPNP_DEVICE_ID('E', 'S', 'S', 0x1869),
+		ISAPNP_DEVICE_ID('E', 'S', 'S', 0x0006),
+	  }
+	},
+        /* ESS 1869 */
+	{ ISAPNP_CARD_ID('E', 'S', 'S', 0x1869),
+	  .devs = {
+		ISAPNP_DEVICE_ID('E', 'S', 'S', 0x1869),
+		ISAPNP_DEVICE_ID('E', 'S', 'S', 0x0006),
+	  }
+	},
+        /* ESS 1878 */
+	{ ISAPNP_CARD_ID('E', 'S', 'S', 0x1878),
+	  .devs = {
+		ISAPNP_DEVICE_ID('E', 'S', 'S', 0x1878),
+		ISAPNP_DEVICE_ID('E', 'S', 'S', 0x0004),
+	  }
+	},
+        /* ESS 1879 */
+	{ ISAPNP_CARD_ID('E', 'S', 'S', 0x1879),
+	  .devs = {
+		ISAPNP_DEVICE_ID('E', 'S', 'S', 0x1879),
+		ISAPNP_DEVICE_ID('E', 'S', 'S', 0x0009),
+	  }
+	},
+        /* --- */
+	{ ISAPNP_CARD_END, }
+};
+
+ISAPNP_CARD_TABLE(snd_audiodrive_pnpids_old);
+
+#endif /* 2.5.0 */
--- linux/sound/isa/als100.c	2003-07-01 14:50:42.000000000 +0200
+++ linux/sound/isa/als100.c	2003-07-01 14:59:28.000000000 +0200
@@ -24,13 +24,14 @@
 #include <linux/init.h>
 #include <linux/wait.h>
 #include <linux/time.h>
-#include <linux/pnp.h>
+#include <sound/pnp.h>
 #include <sound/core.h>
 #define SNDRV_GET_ID
 #include <sound/initval.h>
 #include <sound/mpu401.h>
 #include <sound/opl3.h>
 #include <sound/sb.h>
+#include "als100.isapnp"
 
 #define chip_t sb_t
 
--- /dev/null	2003-07-01 15:09:44.000000000 +0200
+++ linux/sound/isa/dt019x.isapnp	2003-07-01 15:02:26.000000000 +0200
@@ -0,0 +1,31 @@
+/*
+ * This file is autogenerated by the alsa-driver/utils/convert_isapnp_ids script...
+ * DO NOT EDIT!!!
+ * Source file: 
+ */
+
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2, 5, 0)
+
+static struct isapnp_card_id snd_dt019x_pnpids_old[] __devinitdata = {
+        /* DT197A30 */
+	{ ISAPNP_CARD_ID('R', 'W', 'B', 0x1688),
+	  .devs = {
+		ISAPNP_DEVICE_ID('@', '@', '@', 0x0001),
+		ISAPNP_DEVICE_ID('@', 'X', '@', 0x0001),
+		ISAPNP_DEVICE_ID('@', 'H', '@', 0x0001),
+	  }
+	},
+        /* DT0196 / ALS-007 */
+	{ ISAPNP_CARD_ID('A', 'L', 'S', 0x0007),
+	  .devs = {
+		ISAPNP_DEVICE_ID('@', '@', '@', 0x0001),
+		ISAPNP_DEVICE_ID('@', 'X', '@', 0x0001),
+		ISAPNP_DEVICE_ID('@', 'H', '@', 0x0001),
+	  }
+	},
+	{ ISAPNP_CARD_END, }
+};
+
+ISAPNP_CARD_TABLE(snd_dt019x_pnpids_old);
+
+#endif /* 2.5.0 */
--- linux/sound/isa/cmi8330.c	2003-07-01 14:50:13.000000000 +0200
+++ linux/sound/isa/cmi8330.c	2003-07-01 14:59:41.000000000 +0200
@@ -46,12 +46,13 @@
 #include <sound/driver.h>
 #include <linux/init.h>
 #include <linux/slab.h>
-#include <linux/pnp.h>
+#include <sound/pnp.h>
 #include <sound/core.h>
 #include <sound/ad1848.h>
 #include <sound/sb.h>
 #define SNDRV_GET_ID
 #include <sound/initval.h>
+#include "cmi8330.isapnp"
 
 /*
  */
--- /dev/null	2003-07-01 15:12:12.000000000 +0200
+++ linux/sound/isa/cs423x/cs4236.isapnp	2003-07-01 15:02:40.000000000 +0200
@@ -0,0 +1,296 @@
+/*
+ * This file is autogenerated by the alsa-driver/utils/convert_isapnp_ids script...
+ * DO NOT EDIT!!!
+ * Source file: 
+ */
+
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2, 5, 0)
+
+static struct isapnp_card_id snd_cs423x_pnpids_old[] __devinitdata = {
+        /* Intel Marlin Spike Motherboard - CS4235 */
+	{ ISAPNP_CARD_ID('C', 'S', 'C', 0x0225),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0000),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0010),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0003),
+	  }
+	},
+        /* Intel Marlin Spike Motherboard (#2) - CS4235 */
+	{ ISAPNP_CARD_ID('C', 'S', 'C', 0x0225),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0100),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0110),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0103),
+	  }
+	},
+        /* Genius Sound Maker 3DJ - CS4237B */
+	{ ISAPNP_CARD_ID('C', 'S', 'C', 0x0437),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0000),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0010),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0003),
+	  }
+	},
+        /* Digital PC 5000 Onboard - CS4236B */
+	{ ISAPNP_CARD_ID('C', 'S', 'C', 0x0735),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0000),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0010),
+	  }
+	},
+        /* some uknown CS4236B */
+	{ ISAPNP_CARD_ID('C', 'S', 'C', 0x0b35),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0000),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0010),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0003),
+	  }
+	},
+        /* Intel PR440FX Onboard sound */
+	{ ISAPNP_CARD_ID('C', 'S', 'C', 0x0b36),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0000),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0010),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0003),
+	  }
+	},
+        /* CS4235 on mainboard without MPU */
+	{ ISAPNP_CARD_ID('C', 'S', 'C', 0x1425),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0100),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0110),
+	  }
+	},
+        /* Gateway E1000 Onboard CS4236B */
+	{ ISAPNP_CARD_ID('C', 'S', 'C', 0x1335),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0000),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0010),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0003),
+	  }
+	},
+        /* HP 6330 Onboard sound */
+	{ ISAPNP_CARD_ID('C', 'S', 'C', 0x1525),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0100),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0110),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0103),
+	  }
+	},
+        /* Crystal Computer TidalWave128 */
+	{ ISAPNP_CARD_ID('C', 'S', 'C', 0x1e37),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0000),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0010),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0003),
+	  }
+	},
+        /* ACER AW37 - CS4235 */
+	{ ISAPNP_CARD_ID('C', 'S', 'C', 0x4236),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0000),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0010),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0003),
+	  }
+	},
+        /* build-in soundcard in EliteGroup P5TX-LA motherboard - CS4237B */
+	{ ISAPNP_CARD_ID('C', 'S', 'C', 0x4237),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0000),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0010),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0003),
+	  }
+	},
+        /* Crystal 3D - CS4237B */
+	{ ISAPNP_CARD_ID('C', 'S', 'C', 0x4336),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0000),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0010),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0003),
+	  }
+	},
+        /* Typhoon Soundsystem PnP - CS4236B */
+	{ ISAPNP_CARD_ID('C', 'S', 'C', 0x4536),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0000),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0010),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0003),
+	  }
+	},
+        /* Crystal CX4235-XQ3 EP - CS4235 */
+	{ ISAPNP_CARD_ID('C', 'S', 'C', 0x4625),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0100),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0110),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0103),
+	  }
+	},
+        /* Crystal Semiconductors CS4237B */
+	{ ISAPNP_CARD_ID('C', 'S', 'C', 0x4637),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0000),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0010),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0003),
+	  }
+	},
+        /* NewClear 3D - CX4237B-XQ3 */
+	{ ISAPNP_CARD_ID('C', 'S', 'C', 0x4837),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0000),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0010),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0003),
+	  }
+	},
+        /* Dell Optiplex GX1 - CS4236B */
+	{ ISAPNP_CARD_ID('C', 'S', 'C', 0x6835),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0000),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0010),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0003),
+	  }
+	},
+        /* Dell P410 motherboard - CS4236B */
+	{ ISAPNP_CARD_ID('C', 'S', 'C', 0x6835),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0000),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0010),
+	  }
+	},
+        /* Dell Workstation 400 Onboard - CS4236B */
+	{ ISAPNP_CARD_ID('C', 'S', 'C', 0x6836),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0000),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0010),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0003),
+	  }
+	},
+        /* Turtle Beach Malibu - CS4237B */
+	{ ISAPNP_CARD_ID('C', 'S', 'C', 0x7537),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0000),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0010),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0003),
+	  }
+	},
+        /* CS4235 - onboard */
+	{ ISAPNP_CARD_ID('C', 'S', 'C', 0x8025),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0100),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0110),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0103),
+	  }
+	},
+        /* IBM Aptiva 2137 E24 Onboard - CS4237B */
+	{ ISAPNP_CARD_ID('C', 'S', 'C', 0x8037),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0000),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0010),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0003),
+	  }
+	},
+        /* IBM IntelliStation M Pro motherboard */
+	{ ISAPNP_CARD_ID('C', 'S', 'C', 0xc835),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0000),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0010),
+	  }
+	},
+        /* Guillemot MaxiSound 16 PnP - CS4236B */
+	{ ISAPNP_CARD_ID('C', 'S', 'C', 0x9836),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0000),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0010),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0003),
+	  }
+	},
+        /* Gallant SC-70P */
+	{ ISAPNP_CARD_ID('C', 'S', 'C', 0x9837),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0000),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0010),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0003),
+	  }
+	},
+        /* TerraTec AudioSystem EWS64XL - CS4236B */
+	{ ISAPNP_CARD_ID('C', 'S', 'C', 0xa836),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0xa800),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0xa810),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0xa803),
+	  }
+	},
+        /* TerraTec AudioSystem EWS64XL - CS4236B */
+	{ ISAPNP_CARD_ID('C', 'S', 'C', 0xa836),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0xa800),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0xa810),
+	  }
+	},
+        /* ACER AW37/Pro - CS4235 */
+	{ ISAPNP_CARD_ID('C', 'S', 'C', 0xd925),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0000),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0010),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0003),
+	  }
+	},
+        /* ACER AW35/Pro - CS4237B */
+	{ ISAPNP_CARD_ID('C', 'S', 'C', 0xd937),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0000),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0010),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0003),
+	  }
+	},
+        /* CS4235 without MPU401 */
+	{ ISAPNP_CARD_ID('C', 'S', 'C', 0xe825),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0100),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0110),
+	  }
+	},
+        /* IBM IntelliStation M Pro 6898 11U - CS4236B */
+	{ ISAPNP_CARD_ID('C', 'S', 'C', 0xe835),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0000),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0010),
+	  }
+	},
+        /* IBM PC 300PL Onboard - CS4236B */
+	{ ISAPNP_CARD_ID('C', 'S', 'C', 0xe836),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0000),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0010),
+	  }
+	},
+        /* Some noname CS4236 based card */
+	{ ISAPNP_CARD_ID('C', 'S', 'C', 0xe936),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0000),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0010),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0003),
+	  }
+	},
+        /* CS4236B */
+	{ ISAPNP_CARD_ID('C', 'S', 'C', 0xf235),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0000),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0010),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0003),
+	  }
+	},
+        /* CS4236B */
+	{ ISAPNP_CARD_ID('C', 'S', 'C', 0xf238),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0000),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0010),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0003),
+	  }
+	},
+        /* --- */
+	{ ISAPNP_CARD_END, }
+};
+
+ISAPNP_CARD_TABLE(snd_cs423x_pnpids_old);
+
+#endif /* 2.5.0 */
--- /dev/null	2003-07-01 15:12:10.000000000 +0200
+++ linux/sound/isa/cs423x/cs4232.isapnp	2003-07-01 15:02:40.000000000 +0200
@@ -0,0 +1,72 @@
+/*
+ * This file is autogenerated by the alsa-driver/utils/convert_isapnp_ids script...
+ * DO NOT EDIT!!!
+ * Source file: 
+ */
+
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2, 5, 0)
+
+static struct isapnp_card_id snd_cs423x_pnpids_old[] __devinitdata = {
+        /* Philips PCA70PS */
+	{ ISAPNP_CARD_ID('C', 'S', 'C', 0x0d32),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0000),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0010),
+		ISAPNP_DEVICE_ID('P', 'N', 'P', 0xb006),
+	  }
+	},
+        /* TerraTec Maestro 32/96 (CS4232) */
+	{ ISAPNP_CARD_ID('C', 'S', 'C', 0x1a32),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0000),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0010),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0003),
+	  }
+	},
+        /* HP Omnibook 5500 onboard */
+	{ ISAPNP_CARD_ID('C', 'S', 'C', 0x4232),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0000),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0002),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0003),
+	  }
+	},
+        /* Unnamed CS4236 card (Made in Taiwan) */
+	{ ISAPNP_CARD_ID('C', 'S', 'C', 0x4236),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0000),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0010),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0003),
+	  }
+	},
+        /* Turtle Beach TBS-2000 (CS4232) */
+	{ ISAPNP_CARD_ID('C', 'S', 'C', 0x7532),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0000),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0010),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0xb006),
+	  }
+	},
+        /* Turtle Beach Tropez Plus (CS4232) */
+	{ ISAPNP_CARD_ID('C', 'S', 'C', 0x7632),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0000),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0010),
+		ISAPNP_DEVICE_ID('P', 'N', 'P', 0xb006),
+	  }
+	},
+        /* SIC CrystalWave 32 (CS4232) */
+	{ ISAPNP_CARD_ID('C', 'S', 'C', 0xf032),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0000),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0010),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0003),
+	  }
+	},
+        /* --- */
+	{ ISAPNP_CARD_END, }
+};
+
+ISAPNP_CARD_TABLE(snd_cs423x_pnpids_old);
+
+#endif /* 2.5.0 */
--- linux/sound/isa/cs423x/cs4236.c	2003-07-01 14:49:53.000000000 +0200
+++ linux/sound/isa/cs423x/cs4236.c	2003-07-01 15:12:07.000000000 +0200
@@ -22,13 +22,18 @@
 #include <sound/driver.h>
 #include <linux/init.h>
 #include <linux/slab.h>
-#include <linux/pnp.h>
+#include <sound/pnp.h>
 #include <sound/core.h>
 #include <sound/cs4231.h>
 #include <sound/mpu401.h>
 #include <sound/opl3.h>
 #define SNDRV_GET_ID
 #include <sound/initval.h>
+#ifdef CS4232
+#include "cs4232.isapnp"
+#else
+#include "cs4236.isapnp"
+#endif
 
 #define chip_t cs4231_t
 
--- linux/sound/isa/wavefront/wavefront.c	2003-07-01 14:49:58.000000000 +0200
+++ linux/sound/isa/wavefront/wavefront.c	2003-07-01 15:01:59.000000000 +0200
@@ -23,12 +23,13 @@
 #include <linux/init.h>
 #include <linux/interrupt.h>
 #include <linux/slab.h>
-#include <linux/pnp.h>
+#include <sound/pnp.h>
 #include <sound/core.h>
 #define SNDRV_GET_ID
 #include <sound/initval.h>
 #include <sound/opl3.h>
 #include <sound/snd_wavefront.h>
+#include "wavefront.isapnp"
 
 #define chip_t cs4231_t
 
--- /dev/null	2003-07-01 15:10:12.000000000 +0200
+++ linux/sound/isa/wavefront/wavefront.isapnp	2003-07-01 15:02:09.000000000 +0200
@@ -0,0 +1,33 @@
+/*
+ * This file is autogenerated by the alsa-driver/utils/convert_isapnp_ids script...
+ * DO NOT EDIT!!!
+ * Source file: 
+ */
+
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2, 5, 0)
+
+static struct isapnp_card_id snd_wavefront_pnpids_old[] __devinitdata = {
+        /* Tropez */
+	{ ISAPNP_CARD_ID('C', 'S', 'C', 0x7532),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0000),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0010),
+		ISAPNP_DEVICE_ID('P', 'n', 'P', 0xb006),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0004),
+	  }
+	},
+        /* Tropez+ */
+	{ ISAPNP_CARD_ID('C', 'S', 'C', 0x7632),
+	  .devs = {
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0000),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0010),
+		ISAPNP_DEVICE_ID('P', 'n', 'P', 0xb006),
+		ISAPNP_DEVICE_ID('C', 'S', 'C', 0x0004),
+	  }
+	},
+	{ ISAPNP_CARD_END, }
+};
+
+ISAPNP_CARD_TABLE(snd_wavefront_pnpids_old);
+
+#endif /* 2.5.0 */
--- linux/sound/isa/opl3sa2.c	2003-07-01 14:50:18.000000000 +0200
+++ linux/sound/isa/opl3sa2.c	2003-07-01 15:00:15.000000000 +0200
@@ -24,13 +24,14 @@
 #include <linux/interrupt.h>
 #include <linux/pm.h>
 #include <linux/slab.h>
-#include <linux/pnp.h>
+#include <sound/pnp.h>
 #include <sound/core.h>
 #include <sound/cs4231.h>
 #include <sound/mpu401.h>
 #include <sound/opl3.h>
 #define SNDRV_GET_ID
 #include <sound/initval.h>
+#include "opl3sa2.isapnp"
 
 #include <asm/io.h>
 
--- linux/sound/isa/ad1816a/ad1816a.c	2003-07-01 14:50:03.000000000 +0200
+++ linux/sound/isa/ad1816a/ad1816a.c	2003-07-01 15:07:22.000000000 +0200
@@ -22,13 +22,14 @@
 #include <linux/init.h>
 #include <linux/time.h>
 #include <linux/wait.h>
-#include <linux/pnp.h>
+#include <sound/pnp.h>
 #include <sound/core.h>
 #define SNDRV_GET_ID
 #include <sound/initval.h>
 #include <sound/ad1816a.h>
 #include <sound/mpu401.h>
 #include <sound/opl3.h>
+#include "ad1816a.isapnp"
 
 #define chip_t ad1816a_t
 
--- /dev/null	2003-07-01 15:09:24.000000000 +0200
+++ linux/sound/isa/ad1816a/ad1816a.isapnp	2003-07-01 15:02:33.000000000 +0200
@@ -0,0 +1,72 @@
+/*
+ * This file is autogenerated by the alsa-driver/utils/convert_isapnp_ids script...
+ * DO NOT EDIT!!!
+ * Source file: 
+ */
+
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2, 5, 0)
+
+static struct isapnp_card_id snd_ad1816a_pnpids_old[] __devinitdata = {
+        /* Analog Devices AD1815 */
+	{ ISAPNP_CARD_ID('A', 'D', 'S', 0x7150),
+	  .devs = {
+		ISAPNP_DEVICE_ID('A', 'D', 'S', 0x7150),
+		ISAPNP_DEVICE_ID('A', 'D', 'S', 0x7151),
+	  }
+	},
+        /* Analog Devices AD1816A - added by Kenneth Platz <kxp@atl.hp.com> */
+	{ ISAPNP_CARD_ID('A', 'D', 'S', 0x7181),
+	  .devs = {
+		ISAPNP_DEVICE_ID('A', 'D', 'S', 0x7180),
+		ISAPNP_DEVICE_ID('A', 'D', 'S', 0x7181),
+	  }
+	},
+        /* Analog Devices AD1816A - Aztech/Newcom SC-16 3D */
+	{ ISAPNP_CARD_ID('A', 'Z', 'T', 0x1022),
+	  .devs = {
+		ISAPNP_DEVICE_ID('A', 'Z', 'T', 0x1018),
+		ISAPNP_DEVICE_ID('A', 'Z', 'T', 0x2002),
+	  }
+	},
+        /* Highscreen Sound-Boostar 16 3D - added by Stefan Behnel */
+	{ ISAPNP_CARD_ID('L', 'W', 'C', 0x1061),
+	  .devs = {
+		ISAPNP_DEVICE_ID('A', 'D', 'S', 0x7180),
+		ISAPNP_DEVICE_ID('A', 'D', 'S', 0x7181),
+	  }
+	},
+        /* Highscreen Sound-Boostar 16 3D */
+	{ ISAPNP_CARD_ID('M', 'D', 'K', 0x1605),
+	  .devs = {
+		ISAPNP_DEVICE_ID('A', 'D', 'S', 0x7180),
+		ISAPNP_DEVICE_ID('A', 'D', 'S', 0x7181),
+	  }
+	},
+        /* Shark Predator ISA - added by Ken Arromdee */
+	{ ISAPNP_CARD_ID('S', 'M', 'M', 0x7180),
+	  .devs = {
+		ISAPNP_DEVICE_ID('A', 'D', 'S', 0x7180),
+		ISAPNP_DEVICE_ID('A', 'D', 'S', 0x7181),
+	  }
+	},
+        /* Analog Devices AD1816A - Terratec AudioSystem EWS64S */
+	{ ISAPNP_CARD_ID('T', 'E', 'R', 0x1112),
+	  .devs = {
+		ISAPNP_DEVICE_ID('A', 'D', 'S', 0x7180),
+		ISAPNP_DEVICE_ID('A', 'D', 'S', 0x7181),
+	  }
+	},
+        /* Analog Devices AD1816A - Terratec Base 64 */
+	{ ISAPNP_CARD_ID('T', 'E', 'R', 0x1411),
+	  .devs = {
+		ISAPNP_DEVICE_ID('A', 'D', 'S', 0x7180),
+		ISAPNP_DEVICE_ID('A', 'D', 'S', 0x7181),
+	  }
+	},
+        /* end */
+	{ ISAPNP_CARD_END, }
+};
+
+ISAPNP_CARD_TABLE(snd_ad1816a_pnpids_old);
+
+#endif /* 2.5.0 */
--- /dev/null	2003-07-01 15:10:01.000000000 +0200
+++ linux/sound/isa/sscape.isapnp	2003-07-01 15:02:26.000000000 +0200
@@ -0,0 +1,20 @@
+/*
+ * This file is autogenerated by the alsa-driver/utils/convert_isapnp_ids script...
+ * DO NOT EDIT!!!
+ * Source file: 
+ */
+
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2, 5, 0)
+
+static struct isapnp_card_id sscape_pnpids_old[] __devinitdata = {
+	{ ISAPNP_CARD_ID('E', 'N', 'S', 0x3081),
+	  .devs = {
+		ISAPNP_DEVICE_ID('E', 'N', 'S', 0x0000),
+	  }
+	},
+	{ ISAPNP_CARD_END, }
+};
+
+ISAPNP_CARD_TABLE(sscape_pnpids_old);
+
+#endif /* 2.5.0 */
--- /dev/null	2003-07-01 15:09:31.000000000 +0200
+++ linux/sound/isa/als100.isapnp	2003-07-01 15:02:26.000000000 +0200
@@ -0,0 +1,55 @@
+/*
+ * This file is autogenerated by the alsa-driver/utils/convert_isapnp_ids script...
+ * DO NOT EDIT!!!
+ * Source file: 
+ */
+
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2, 5, 0)
+
+static struct isapnp_card_id snd_als100_pnpids_old[] __devinitdata = {
+        /* ALS100 - PRO16PNP */
+	{ ISAPNP_CARD_ID('A', 'L', 'S', 0x0001),
+	  .devs = {
+		ISAPNP_DEVICE_ID('@', '@', '@', 0x0001),
+		ISAPNP_DEVICE_ID('@', 'X', '@', 0x0001),
+		ISAPNP_DEVICE_ID('@', 'H', '@', 0x0001),
+	  }
+	},
+        /* ALS110 - MF1000 - Digimate 3D Sound */
+	{ ISAPNP_CARD_ID('A', 'L', 'S', 0x0110),
+	  .devs = {
+		ISAPNP_DEVICE_ID('@', '@', '@', 0x1001),
+		ISAPNP_DEVICE_ID('@', 'X', '@', 0x1001),
+		ISAPNP_DEVICE_ID('@', 'H', '@', 0x1001),
+	  }
+	},
+        /* ALS120 */
+	{ ISAPNP_CARD_ID('A', 'L', 'S', 0x0120),
+	  .devs = {
+		ISAPNP_DEVICE_ID('@', '@', '@', 0x2001),
+		ISAPNP_DEVICE_ID('@', 'X', '@', 0x2001),
+		ISAPNP_DEVICE_ID('@', 'H', '@', 0x2001),
+	  }
+	},
+        /* ALS200 */
+	{ ISAPNP_CARD_ID('A', 'L', 'S', 0x0200),
+	  .devs = {
+		ISAPNP_DEVICE_ID('@', '@', '@', 0x0020),
+		ISAPNP_DEVICE_ID('@', 'X', '@', 0x0020),
+		ISAPNP_DEVICE_ID('@', 'H', '@', 0x0001),
+	  }
+	},
+        /* RTL3000 */
+	{ ISAPNP_CARD_ID('R', 'T', 'L', 0x3000),
+	  .devs = {
+		ISAPNP_DEVICE_ID('@', '@', '@', 0x2001),
+		ISAPNP_DEVICE_ID('@', 'X', '@', 0x2001),
+		ISAPNP_DEVICE_ID('@', 'H', '@', 0x2001),
+	  }
+	},
+	{ ISAPNP_CARD_END, }
+};
+
+ISAPNP_CARD_TABLE(snd_als100_pnpids_old);
+
+#endif /* 2.5.0 */
--- /dev/null	2003-07-01 15:09:57.000000000 +0200
+++ linux/sound/isa/opl3sa2.isapnp	2003-07-01 15:02:26.000000000 +0200
@@ -0,0 +1,40 @@
+/*
+ * This file is autogenerated by the alsa-driver/utils/convert_isapnp_ids script...
+ * DO NOT EDIT!!!
+ * Source file: 
+ */
+
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2, 5, 0)
+
+static struct isapnp_card_id snd_opl3sa2_pnpids_old[] __devinitdata = {
+        /* Yamaha YMF719E-S (Genius Sound Maker 3DX) */
+	{ ISAPNP_CARD_ID('Y', 'M', 'H', 0x0020),
+	  .devs = {
+		ISAPNP_DEVICE_ID('Y', 'M', 'H', 0x0021),
+	  }
+	},
+        /* Yamaha OPL3-SA3 (integrated on Intel's Pentium II AL440LX motherboard) */
+	{ ISAPNP_CARD_ID('Y', 'M', 'H', 0x0030),
+	  .devs = {
+		ISAPNP_DEVICE_ID('Y', 'M', 'H', 0x0021),
+	  }
+	},
+        /* Yamaha OPL3-SA2 */
+	{ ISAPNP_CARD_ID('Y', 'M', 'H', 0x0800),
+	  .devs = {
+		ISAPNP_DEVICE_ID('Y', 'M', 'H', 0x0021),
+	  }
+	},
+        /* NeoMagic MagicWave 3DX */
+	{ ISAPNP_CARD_ID('N', 'M', 'X', 0x2200),
+	  .devs = {
+		ISAPNP_DEVICE_ID('Y', 'M', 'H', 0x2210),
+	  }
+	},
+        /* --- */
+	{ ISAPNP_CARD_END, }
+};
+
+ISAPNP_CARD_TABLE(snd_opl3sa2_pnpids_old);
+
+#endif /* 2.5.0 */
--- linux/sound/isa/azt2320.c	2003-07-01 14:50:51.000000000 +0200
+++ linux/sound/isa/azt2320.c	2003-07-01 14:59:23.000000000 +0200
@@ -35,13 +35,14 @@
 #include <linux/init.h>
 #include <linux/time.h>
 #include <linux/wait.h>
-#include <linux/pnp.h>
+#include <sound/pnp.h>
 #include <sound/core.h>
 #define SNDRV_GET_ID
 #include <sound/initval.h>
 #include <sound/cs4231.h>
 #include <sound/mpu401.h>
 #include <sound/opl3.h>
+#include "azt2320.isapnp"
 
 #define chip_t cs4231_t
 
--- /dev/null	2003-07-01 15:12:40.000000000 +0200
+++ linux/sound/isa/opti9xx/opti93x.isapnp	2003-07-01 15:02:52.000000000 +0200
@@ -0,0 +1,29 @@
+/*
+ * This file is autogenerated by the alsa-driver/utils/convert_isapnp_ids script...
+ * DO NOT EDIT!!!
+ * Source file: 
+ */
+
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2, 5, 0)
+
+static struct isapnp_card_id snd_opti9xx_pnpids_old[] __devinitdata = {
+
+
+
+
+
+
+        /* OPTi 82C931/3 */
+	{ ISAPNP_CARD_ID('O', 'P', 'T', 0x0931),
+	  .devs = {
+		ISAPNP_DEVICE_ID('O', 'P', 'T', 0x9310),
+		ISAPNP_DEVICE_ID('O', 'P', 'T', 0x0002),
+	  }
+	},
+
+	{ ISAPNP_CARD_END, }
+};
+
+ISAPNP_CARD_TABLE(snd_opti9xx_pnpids_old);
+
+#endif /* 2.5.0 */
--- /dev/null	2003-07-01 15:12:30.000000000 +0200
+++ linux/sound/isa/opti9xx/opti92x-ad1848.isapnp	2003-07-01 15:02:52.000000000 +0200
@@ -0,0 +1,34 @@
+/*
+ * This file is autogenerated by the alsa-driver/utils/convert_isapnp_ids script...
+ * DO NOT EDIT!!!
+ * Source file: 
+ */
+
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2, 5, 0)
+
+static struct isapnp_card_id snd_opti9xx_pnpids_old[] __devinitdata = {
+
+        /* OPTi 82C924 */
+	{ ISAPNP_CARD_ID('O', 'P', 'T', 0x0924),
+	  .devs = {
+		ISAPNP_DEVICE_ID('O', 'P', 'T', 0x0000),
+		ISAPNP_DEVICE_ID('O', 'P', 'T', 0x0002),
+	  }
+	},
+        /* OPTi 82C925 */
+	{ ISAPNP_CARD_ID('O', 'P', 'T', 0x0925),
+	  .devs = {
+		ISAPNP_DEVICE_ID('O', 'P', 'T', 0x9250),
+		ISAPNP_DEVICE_ID('O', 'P', 'T', 0x0002),
+	  }
+	},
+
+
+
+
+	{ ISAPNP_CARD_END, }
+};
+
+ISAPNP_CARD_TABLE(snd_opti9xx_pnpids_old);
+
+#endif /* 2.5.0 */
--- linux/sound/isa/opti9xx/opti92x-ad1848.c	2003-07-01 14:50:36.000000000 +0200
+++ linux/sound/isa/opti9xx/opti92x-ad1848.c	2003-07-01 15:13:34.000000000 +0200
@@ -29,7 +29,7 @@
 #include <linux/delay.h>
 #include <linux/init.h>
 #include <linux/slab.h>
-#include <linux/pnp.h>
+#include <sound/pnp.h>
 #include <sound/core.h>
 #ifdef CS4231
 #include <sound/cs4231.h>
@@ -50,6 +50,15 @@
 #define SNDRV_LEGACY_FIND_FREE_DMA
 #define SNDRV_GET_ID
 #include <sound/initval.h>
+#ifdef OPTi93X
+#include "opti93x.isapnp"
+#else
+#ifdef CS4231
+#include "opti92x-cs4231.isapnp"
+#else
+#include "opti92x-ad1848.isapnp"
+#endif
+#endif
 
 MODULE_AUTHOR("Massimo Piccioni <dafastidio@libero.it>");
 MODULE_CLASSES("{sound}");
--- /dev/null	2003-07-01 15:12:34.000000000 +0200
+++ linux/sound/isa/opti9xx/opti92x-cs4231.isapnp	2003-07-01 15:02:52.000000000 +0200
@@ -0,0 +1,34 @@
+/*
+ * This file is autogenerated by the alsa-driver/utils/convert_isapnp_ids script...
+ * DO NOT EDIT!!!
+ * Source file: 
+ */
+
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2, 5, 0)
+
+static struct isapnp_card_id snd_opti9xx_pnpids_old[] __devinitdata = {
+
+        /* OPTi 82C924 */
+	{ ISAPNP_CARD_ID('O', 'P', 'T', 0x0924),
+	  .devs = {
+		ISAPNP_DEVICE_ID('O', 'P', 'T', 0x0000),
+		ISAPNP_DEVICE_ID('O', 'P', 'T', 0x0002),
+	  }
+	},
+        /* OPTi 82C925 */
+	{ ISAPNP_CARD_ID('O', 'P', 'T', 0x0925),
+	  .devs = {
+		ISAPNP_DEVICE_ID('O', 'P', 'T', 0x9250),
+		ISAPNP_DEVICE_ID('O', 'P', 'T', 0x0002),
+	  }
+	},
+
+
+
+
+	{ ISAPNP_CARD_END, }
+};
+
+ISAPNP_CARD_TABLE(snd_opti9xx_pnpids_old);
+
+#endif /* 2.5.0 */
--- linux/sound/isa/es18xx.c	2003-07-01 14:49:47.000000000 +0200
+++ linux/sound/isa/es18xx.c	2003-07-01 15:00:00.000000000 +0200
@@ -70,7 +70,7 @@
 #include <linux/init.h>
 #include <linux/pm.h>
 #include <linux/slab.h>
-#include <linux/pnp.h>
+#include <sound/pnp.h>
 #include <linux/isapnp.h>
 #include <sound/core.h>
 #include <sound/control.h>
@@ -83,6 +83,7 @@
 #define SNDRV_LEGACY_FIND_FREE_DMA
 #define SNDRV_GET_ID
 #include <sound/initval.h>
+#include "es18xx.isapnp"
 
 #define PFX "es18xx: "
 
--- /dev/null	2003-07-01 15:09:35.000000000 +0200
+++ linux/sound/isa/azt2320.isapnp	2003-07-01 15:02:26.000000000 +0200
@@ -0,0 +1,57 @@
+/*
+ * This file is autogenerated by the alsa-driver/utils/convert_isapnp_ids script...
+ * DO NOT EDIT!!!
+ * Source file: 
+ */
+
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2, 5, 0)
+
+static struct isapnp_card_id snd_azt2320_pnpids_old[] __devinitdata = {
+        /* PRO16V */
+	{ ISAPNP_CARD_ID('A', 'Z', 'T', 0x1008),
+	  .devs = {
+		ISAPNP_DEVICE_ID('A', 'Z', 'T', 0x1008),
+		ISAPNP_DEVICE_ID('A', 'Z', 'T', 0x2001),
+	  }
+	},
+        /* Aztech Sound Galaxy 16 */
+	{ ISAPNP_CARD_ID('A', 'Z', 'T', 0x2320),
+	  .devs = {
+		ISAPNP_DEVICE_ID('A', 'Z', 'T', 0x0001),
+		ISAPNP_DEVICE_ID('A', 'Z', 'T', 0x0002),
+	  }
+	},
+        /* Packard Bell Sound III 336 AM/SP */
+	{ ISAPNP_CARD_ID('A', 'Z', 'T', 0x3000),
+	  .devs = {
+		ISAPNP_DEVICE_ID('A', 'Z', 'T', 0x1003),
+		ISAPNP_DEVICE_ID('A', 'Z', 'T', 0x2001),
+	  }
+	},
+        /* AT3300 */
+	{ ISAPNP_CARD_ID('A', 'Z', 'T', 0x3002),
+	  .devs = {
+		ISAPNP_DEVICE_ID('A', 'Z', 'T', 0x1004),
+		ISAPNP_DEVICE_ID('A', 'Z', 'T', 0x2001),
+	  }
+	},
+        /* --- */
+	{ ISAPNP_CARD_ID('A', 'Z', 'T', 0x3005),
+	  .devs = {
+		ISAPNP_DEVICE_ID('A', 'Z', 'T', 0x1003),
+		ISAPNP_DEVICE_ID('A', 'Z', 'T', 0x2001),
+	  }
+	},
+        /* --- */
+	{ ISAPNP_CARD_ID('A', 'Z', 'T', 0x3011),
+	  .devs = {
+		ISAPNP_DEVICE_ID('A', 'Z', 'T', 0x1003),
+		ISAPNP_DEVICE_ID('A', 'Z', 'T', 0x2001),
+	  }
+	},
+	{ ISAPNP_CARD_END, }
+};
+
+ISAPNP_CARD_TABLE(snd_azt2320_pnpids_old);
+
+#endif /* 2.5.0 */
--- /dev/null	2003-07-01 15:09:38.000000000 +0200
+++ linux/sound/isa/cmi8330.isapnp	2003-07-01 15:02:26.000000000 +0200
@@ -0,0 +1,21 @@
+/*
+ * This file is autogenerated by the alsa-driver/utils/convert_isapnp_ids script...
+ * DO NOT EDIT!!!
+ * Source file: 
+ */
+
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2, 5, 0)
+
+static struct isapnp_card_id snd_cmi8330_pnpids_old[] __devinitdata = {
+	{ ISAPNP_CARD_ID('C', 'M', 'I', 0x0001),
+	  .devs = {
+		ISAPNP_DEVICE_ID('@', '@', '@', 0x0001),
+		ISAPNP_DEVICE_ID('@', 'X', '@', 0x0001),
+	  }
+	},
+	{ ISAPNP_CARD_END, }
+};
+
+ISAPNP_CARD_TABLE(snd_cmi8330_pnpids_old);
+
+#endif /* 2.5.0 */
