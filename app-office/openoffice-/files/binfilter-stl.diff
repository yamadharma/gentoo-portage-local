--- binfilter/inc/bf_starmath/rect.hxx.orig	2006-07-11 11:16:28.000000000 +0200
+++ binfilter/inc/bf_starmath/rect.hxx	2006-07-11 11:16:36.000000000 +0200
@@ -36,7 +36,7 @@
 #ifndef RECT_HXX
 #define RECT_HXX
 
-#include <new.h>
+#include <new>
 
 
 #ifndef _GEN_HXX //autogen
--- binfilter/bf_svx/source/svdraw/svx_svdouno.cxx.orig	2006-07-12 12:48:54.000000000 +0200
+++ binfilter/bf_svx/source/svdraw/svx_svdouno.cxx	2006-07-12 12:50:32.000000000 +0200
@@ -746,7 +746,7 @@
 /*N*/         SdrViewIter aIter( this );
 /*N*/ 	    for ( SdrView* pView = aIter.FirstView(); pView; pView = aIter.NextView() )
 /*N*/         {
-/*N*/             ::std::set< SdrView* >::const_iterator aPrevPos = aPreviouslyVisible.find( pView );
+/*N*/             ::std::set< SdrView* >::iterator aPrevPos = aPreviouslyVisible.find( pView );
 /*N*/             if ( aPreviouslyVisible.end() != aPrevPos )
 /*N*/             {   // in pView, we were visible _before_ the layer change, and are
 /*N*/                 // visible _after_ the layer change, too
--- binfilter/bf_xmloff/source/core/xmloff_nmspmap.cxx.orig	2006-07-12 13:16:27.000000000 +0200
+++ binfilter/bf_xmloff/source/core/xmloff_nmspmap.cxx	2006-07-12 13:17:43.000000000 +0200
@@ -99,7 +99,11 @@
 
 int SvXMLNamespaceMap::operator ==( const SvXMLNamespaceMap& rCmp ) const
 {
+#if STLPORT_VERSION >= 500
+	return static_cast < int > (aNameHash.size() == rCmp.aNameHash.size());
+#else
 	return static_cast < int > (aNameHash == rCmp.aNameHash);
+#endif
 }
 
 sal_uInt16 SvXMLNamespaceMap::_Add( const OUString& rPrefix, const OUString &rName, sal_uInt16 nKey )
--- binfilter/bf_xmloff/source/style/xmloff_xmlnumfe.cxx.orig	2006-07-12 13:23:46.000000000 +0200
+++ binfilter/bf_xmloff/source/style/xmloff_xmlnumfe.cxx	2006-07-12 13:24:42.000000000 +0200
@@ -172,13 +172,13 @@
 
 sal_Bool SvXMLNumUsedList_Impl::IsUsed( sal_uInt32 nKey ) const
 {
-	SvXMLuInt32Set::iterator aItr = aUsed.find(nKey);
+	SvXMLuInt32Set::const_iterator aItr = aUsed.find(nKey);
 	return (aItr != aUsed.end());
 }
 
 sal_Bool SvXMLNumUsedList_Impl::IsWasUsed( sal_uInt32 nKey ) const
 {
-	SvXMLuInt32Set::iterator aItr = aWasUsed.find(nKey);
+	SvXMLuInt32Set::const_iterator aItr = aWasUsed.find(nKey);
 	return (aItr != aWasUsed.end());
 }
 
