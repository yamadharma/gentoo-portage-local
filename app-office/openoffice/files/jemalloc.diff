--- config_office/configure.in.orig	2008-03-18 19:27:49.000000000 +0100
+++ config_office/configure.in	2008-03-18 19:29:49.000000000 +0100
@@ -745,7 +745,7 @@
 ],,)
 AC_ARG_WITH(alloc,
 [  --with-alloc            Define which allocator to build with
-			                 (choices are oo, system, tcmalloc)
+			  (choices are oo, system, tcmalloc, jemalloc)
 ],,)
 
 BUILD_TYPE="OOo EXT"
@@ -2499,6 +2499,14 @@
         [AC_MSG_ERROR(tcmalloc not found or functional. Install the Google Profiling Tools)], [])
     ALLOC="TCMALLOC";
 fi
+if test "$with_alloc" = "jemalloc"; then
+    save_CFLAGS=$CFLAGS
+    CFLAGS="$CFLAGS -pthread"
+    AC_CHECK_LIB(jemalloc, malloc, [],
+        [AC_MSG_ERROR(jemalloc not found or functional. Install the FreeBSD 7 allocator)], [])
+    ALLOC="JEMALLOC";
+    CFLAGS=$save_CFLAGS
+fi
 if test "$with_alloc" = "internal" -o -z "$with_alloc"; then
    AC_MSG_RESULT([internal])
 fi
--- solenv/inc/unxlngi4.mk.orig	2008-03-18 19:38:13.000000000 +0100
+++ solenv/inc/unxlngi4.mk	2008-03-18 19:39:14.000000000 +0100
@@ -180,6 +180,13 @@
 STDSHLCUIMT+=-ltcmalloc
 .ENDIF
 
+.IF "$(ALLOC)" == "JEMALLOC"
+STDLIBGUIMT+=-ljemalloc
+STDLIBCUIMT+=-ljemalloc
+STDSHLGUIMT+=-ljemalloc
+STDSHLCUIMT+=-ljemalloc
+.ENDIF
+
 # libraries for linking applications
 STDLIBGUIMT+=-lX11 -ldl -lpthread -lm
 STDLIBCUIMT+=-ldl -lpthread -lm
--- solenv/inc/unxlngi6.mk.orig	2008-03-18 19:38:20.000000000 +0100
+++ solenv/inc/unxlngi6.mk	2008-03-18 19:39:49.000000000 +0100
@@ -201,6 +201,14 @@
 STDSHLGUIMT+=-ltcmalloc
 STDSHLCUIMT+=-ltcmalloc
 .ENDIF
+
+.IF "$(ALLOC)" == "JEMALLOC"
+STDLIBGUIMT+=-ljemalloc
+STDLIBCUIMT+=-ljemalloc
+STDSHLGUIMT+=-ljemalloc
+STDSHLCUIMT+=-ljemalloc
+.ENDIF
+
 .IF "$(HAVE_LD_HASH_STYLE)"  == "TRUE"
 LINKFLAGS += -Wl,--hash-style=gnu
 .ELSE
--- solenv/inc/unxlngx6.mk.orig	2008-03-19 18:35:36.000000000 +0100
+++ solenv/inc/unxlngx6.mk	2008-03-19 18:36:47.000000000 +0100
@@ -83,6 +83,14 @@
 CFLAGSENABLESYMBOLS=-g # was temporarily commented out, reenabled before Beta
 
 .ENDIF
+
+.IF "$(ALLOC)" == "JEMALLOC"
+STDLIBGUIMT+=-ljemalloc
+STDLIBCUIMT+=-ljemalloc
+STDSHLGUIMT+=-ljemalloc
+STDSHLCUIMT+=-ljemalloc
+.ENDIF
+
 .IF "$(HAVE_LD_HASH_STYLE)"  == "TRUE"
 LINKFLAGS += -Wl,--hash-style=gnu
 .ELSE
--- sal/rtl/source/makefile.mk.orig	2008-03-18 19:41:00.000000000 +0100
+++ sal/rtl/source/makefile.mk	2008-03-18 19:42:42.000000000 +0100
@@ -54,7 +54,7 @@
 
 .INCLUDE :  settings.mk
 
-.IF "$(ALLOC)" == "SYS_ALLOC" || "$(ALLOC)" == "TCMALLOC"
+.IF "$(ALLOC)" == "SYS_ALLOC" || "$(ALLOC)" == "TCMALLOC" || "$(ALLOC)" == "JEMALLOC"
 CDEFS+= -DFORCE_SYSALLOC
 .ENDIF
 
--- sal/osl/unx/process.c.orig	2008-03-19 22:43:18.000000000 +0100
+++ sal/osl/unx/process.c	2008-03-19 23:09:48.000000000 +0100
@@ -736,7 +736,11 @@
                             osl_getThreadTextEncoding(),
                             OUSTRING_TO_OSTRING_CVTFLAGS );
 
-        pArguments[idx]=strdup(rtl_string_getStr(strArg));
+        pArguments[idx]=(char*)malloc(strlen(rtl_string_getStr(strArg)) + 1);
+	if(pArguments[idx])
+	   strcpy(pArguments[idx], rtl_string_getStr(strArg));
+	else
+	   pArguments[idx] = "";
         rtl_string_release(strArg);
 		pArguments[idx+1]=0;
     }
@@ -756,7 +760,11 @@
                             osl_getThreadTextEncoding(),
                             OUSTRING_TO_OSTRING_CVTFLAGS );
 
-        pEnvironment[idx]=strdup(rtl_string_getStr(strEnv));
+        pEnvironment[idx]=(char*)malloc(strlen(rtl_string_getStr(strEnv)) + 1);
+	if(pEnvironment[idx])
+	   strcpy(pEnvironment[idx], rtl_string_getStr(strEnv));
+	else
+	   pEnvironment[idx] = "";
         rtl_string_release(strEnv);
         pEnvironment[idx+1]=0;
     }
@@ -875,23 +883,45 @@
 		(osl_searchPath_impl(pszImageName, NULL, '\0', path, sizeof(path)) == osl_Process_E_None))
 		pszImageName = path;
 
-	Data.m_pszArgs[0] = strdup(pszImageName);
+	Data.m_pszArgs[0] = (char*)malloc(strlen(pszImageName) + 1);
+	if(Data.m_pszArgs[0])
+	   strcpy(Data.m_pszArgs[0], pszImageName);
+	else
+	   Data.m_pszArgs[0] = "";
 	Data.m_pszArgs[1] = 0;
 
     if ( pszArguments != 0 )
     {
         for (i = 0; ((i + 2) < MAX_ARGS) && (pszArguments[i] != NULL); i++)
-            Data.m_pszArgs[i+1] = strdup(pszArguments[i]);
+	{
+            Data.m_pszArgs[i+1] = (char*)malloc(strlen(pszArguments[i]) + 1);
+	    if(Data.m_pszArgs[i+1])
+	       strcpy(Data.m_pszArgs[i+1], pszArguments[i]);
+	    else
+	       Data.m_pszArgs[i+1] = "";
+	}
         Data.m_pszArgs[i+2] = NULL;
     }
 
 	Data.m_options = Options;
-	Data.m_pszDir  = (pszDirectory != NULL) ? strdup(pszDirectory) : NULL;
+	if(pszDirectory != NULL)
+	{
+	   Data.m_pszDir = (char*)malloc(strlen(pszDirectory) + 1);
+	   strcpy(Data.m_pszDir, pszDirectory);
+	} else {
+	   Data.m_pszDir = NULL;
+	}
 
 	if (pszEnvironments != NULL)
 	{
 		for (i = 0; ((i + 1) < MAX_ENVS) &&  (pszEnvironments[i] != NULL); i++)
-			Data.m_pszEnv[i] = strdup(pszEnvironments[i]);
+		{
+			Data.m_pszEnv[i] = (char*)malloc(strlen(pszEnvironments[i]) + 1);
+			if(Data.m_pszEnv[i])
+			   strcpy(Data.m_pszEnv[i], pszEnvironments[i]);
+			else
+			   Data.m_pszEnv[i] = "";
+		}
 	 	Data.m_pszEnv[i+1] = NULL;
 	}
 	else
