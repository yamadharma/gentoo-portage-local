#ifndef INCLUDED_ORG_OPENOFFICE_VBA_XVBATOOOEVENTDESCGEN_HDL
#define INCLUDED_ORG_OPENOFFICE_VBA_XVBATOOOEVENTDESCGEN_HDL

#include "sal/config.h"

#include "com/sun/star/script/ScriptEventDescriptor.hdl"
namespace com { namespace sun { namespace star { namespace script { class XScriptEventsSupplier; } } } }
#include "com/sun/star/uno/RuntimeException.hdl"
#include "com/sun/star/uno/XInterface.hdl"
#include "com/sun/star/uno/Reference.h"
#include "com/sun/star/uno/Sequence.h"
#include "cppu/macros.hxx"
#include "rtl/ustring.hxx"

namespace com { namespace sun { namespace star { namespace uno {
class Type;
} } } }

namespace org { namespace openoffice { namespace vba {

class SAL_NO_VTABLE XVBAToOOEventDescGen : public ::com::sun::star::uno::XInterface
{
public:

    // Methods
    virtual ::com::sun::star::uno::Sequence< ::com::sun::star::script::ScriptEventDescriptor > SAL_CALL getEventDescriptions( const ::com::sun::star::uno::Reference< ::com::sun::star::uno::XInterface >& xControl, const ::rtl::OUString& sCodeName ) throw (::com::sun::star::uno::RuntimeException) = 0;
    virtual ::com::sun::star::uno::Reference< ::com::sun::star::script::XScriptEventsSupplier > SAL_CALL getEventSupplier( const ::com::sun::star::uno::Reference< ::com::sun::star::uno::XInterface >& xControl, const ::rtl::OUString& sCodeName ) throw (::com::sun::star::uno::RuntimeException) = 0;

    static inline ::com::sun::star::uno::Type const & SAL_CALL static_type(void * = 0);
};

} } }

inline const ::com::sun::star::uno::Type& SAL_CALL getCppuType( const ::com::sun::star::uno::Reference< ::org::openoffice::vba::XVBAToOOEventDescGen >* ) SAL_THROW( () );

#endif // INCLUDED_ORG_OPENOFFICE_VBA_XVBATOOOEVENTDESCGEN_HDL
