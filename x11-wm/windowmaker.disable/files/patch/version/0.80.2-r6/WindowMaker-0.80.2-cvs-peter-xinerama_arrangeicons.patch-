--- WindowMaker-0.80.2/src/actions.c.wmxin	2003-10-16 23:09:26 +0400
+++ WindowMaker-0.80.2/src/actions.c	2003-10-16 23:17:09 +0400
@@ -1672,10 +1672,13 @@
 
     while (aicon) {
         if (!aicon->docked) {
-            /* XXX: can: icon == NULL ? */
             /* The intention here is to place the AppIcon on the head that contains most of the applications _main_ window. */
-            /*	    printf("appicon: %x %x\n", aicon->icon->core->window, aicon->main_window); */
-            head = wGetHeadForWindow(aicon->icon->owner);
+	    Window group = aicon->icon->owner->fake_group ?
+		aicon->icon->owner->fake_group->origLeader :
+		aicon->icon->owner->main_window;
+	    WWindow *wwin = scr->focused_window;
+	    while (wwin && wwin->group_id != group) wwin = wwin->prev;
+	    head = wGetHeadForWindow(wwin);
 
             if (aicon->x_pos != X || aicon->y_pos != Y) {
 #ifdef ANIMATIONS
--- WindowMaker-0.80.2/src/moveres.c.wmxin	2003-10-16 23:09:25 +0400
+++ WindowMaker-0.80.2/src/moveres.c	2003-10-16 23:17:09 +0400
@@ -1336,6 +1336,9 @@
     KeySym keysym=NoSymbol;
     int moment=0;
     KeyCode shiftl,shiftr,ctrll,ctrlmode;
+    int head = 
+	wPreferences.auto_arrange_icons && wXineramaHeads(scr) > 1 ? 
+	wGetHeadForWindow(wwin) : scr->xine_info.primary_head;
 
     shiftl = XKeysymToKeycode(dpy, XK_Shift_L);
     shiftr = XKeysymToKeycode(dpy, XK_Shift_R);
@@ -1623,6 +1626,10 @@
                 wWindowChangeWorkspace(wwin, scr->current_workspace);
                 wSetFocusTo(scr, wwin);
             }
+
+	    if (wPreferences.auto_arrange_icons && wXineramaHeads(scr) > 1 &&
+		head != wGetHeadForWindow(wwin)) wArrangeIcons(scr, True);
+
             return 1;
         }
     }
@@ -1662,6 +1669,9 @@
     /* This needs not to change while moving, else bad things can happen */
     int opaqueMove = wPreferences.opaque_move;
     MoveData moveData;
+    int head = 
+	wPreferences.auto_arrange_icons && wXineramaHeads(scr) > 1 ? 
+	wGetHeadForWindow(wwin) : scr->xine_info.primary_head;
 #ifdef GHOST_WINDOW_MOVE
     RImage *rimg;
 
@@ -1906,6 +1916,10 @@
 
     freeMoveData(&moveData);
 
+    if (started && 
+	wPreferences.auto_arrange_icons && wXineramaHeads(scr) > 1 &&
+	head != wGetHeadForWindow(wwin)) wArrangeIcons(scr, True);
+
     return started;
 }
 
@@ -1988,6 +2002,9 @@
     int orig_fy = fy;
     int orig_fw = fw;
     int orig_fh = fh;
+    int head = 
+	wPreferences.auto_arrange_icons && wXineramaHeads(scr) > 1 ? 
+	wGetHeadForWindow(wwin) : scr->xine_info.primary_head;
 
     if (wwin->flags.shaded) {
         wwarning("internal error: tryein");
@@ -2189,6 +2206,9 @@
             WMHandleEvent(&event);
         }
     }
+
+    if (wPreferences.auto_arrange_icons && wXineramaHeads(scr) > 1 &&
+	head != wGetHeadForWindow(wwin)) wArrangeIcons(scr, True);
 }
 
 #undef LEFT
