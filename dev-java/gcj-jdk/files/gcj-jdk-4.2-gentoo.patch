--- Makefile.in.orig	2006-08-22 18:17:59.000000000 +0200
+++ Makefile.in	2006-08-22 18:19:42.000000000 +0200
@@ -175,6 +175,7 @@
 tools_jar_source_files = \
 	$(top_builddir)/com/sun/tools/javac/Config.java \
 	com/sun/tools/javac/Main.java \
+	com/sun/tools/javah/Main.java \
 	sun/rmi/rmic/Main.java
 
 tools_jar_class_files = $(tools_jar_source_files:.java=.class)
@@ -190,6 +191,7 @@
 EXTRA_DIST = \
 	com/sun/tools/javac/Config.java.in \
 	com/sun/tools/javac/Main.java \
+	com/sun/tools/javah/Main.java \
 	sun/rmi/rmic/Main.java \
 	aot-compile \
 	aot-compile-rpm \
@@ -286,7 +288,7 @@
 distdir: $(DISTFILES)
 	$(am__remove_distdir)
 	mkdir $(distdir)
-	$(mkdir_p) $(distdir)/. $(distdir)/com/sun/tools/javac $(distdir)/sun/rmi/rmic
+	$(mkdir_p) $(distdir)/. $(distdir)/com/sun/tools/javac $(distdir)/com/sun/tools/javah $(distdir)/sun/rmi/rmic
 	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
 	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
 	list='$(DISTFILES)'; for file in $$list; do \
@@ -517,8 +519,8 @@
 	$(JAR) xf $(taglet_jarfile) 
 	rm -rf META-INF
 
-tools.jar: $(tools_jar_class_files) $(javadoc_class_files)
-	$(JAR) cMf $@ $(tools_jar_class_files) com/sun/javadoc com/sun/tools/doclets
+tools.jar: $(tools_jar_class_files)
+	$(JAR) cMf $@ $(tools_jar_class_files)
 
 install-exec-local:
 	$(mkinstalldirs) $(DESTDIR)$(JRE_LIB_DIR)/$(CPU)
@@ -533,13 +535,10 @@
 	$(mkinstalldirs) $(DESTDIR)$(JRE_LIB_DIR)/$(CPU)
 	$(mkinstalldirs) $(DESTDIR)$(SDK_INCLUDE_DIR)
 	$(mkinstalldirs) $(DESTDIR)$(SDK_INCLUDE_DIR)/$(OS)
-	ln -sf $(GCJ_BIN_DIR)/gij$(gcc_suffix) $(DESTDIR)$(SDK_BIN_DIR)/java
-	ln -sf $(GCJ_BIN_DIR)/gij$(gcc_suffix) $(DESTDIR)$(JRE_BIN_DIR)/java
-	ln -sf $(GCJ_BIN_DIR)/fastjar$(gcc_suffix) $(DESTDIR)$(SDK_BIN_DIR)/jar
+	ln -sf $(GCJ_BIN_DIR)/gjar$(gcc_suffix) $(DESTDIR)$(SDK_BIN_DIR)/jar
 	ln -sf $(GJDOC) $(DESTDIR)$(SDK_BIN_DIR)/javadoc
 	ln -sf $(GCJ_BIN_DIR)/grmic$(gcc_suffix) $(DESTDIR)$(SDK_BIN_DIR)/rmic
 	ln -sf $(GCJ_BIN_DIR)/gjnih$(gcc_suffix) $(DESTDIR)$(SDK_BIN_DIR)/javah
-	ln -sf $(GCJ_BIN_DIR)/ecj $(DESTDIR)$(SDK_BIN_DIR)/javac
 	ln -sf $(GCJ_BIN_DIR)/gappletviewer $(DESTDIR)$(SDK_BIN_DIR)/appletviewer
 	ln -sf $(GCJ_BIN_DIR)/gjarsigner $(DESTDIR)$(SDK_BIN_DIR)/jarsigner
 	ln -sf $(GCJ_BIN_DIR)/grmiregistry$(gcc_suffix) $(DESTDIR)$(SDK_BIN_DIR)/rmiregistry
--- com/sun/tools/javac/Main.java.orig	2006-08-22 18:18:11.000000000 +0200
+++ com/sun/tools/javac/Main.java	2006-08-22 18:19:04.000000000 +0200
@@ -56,11 +56,11 @@
       }
     catch (ClassNotFoundException e)
       {
-        File jar = new File (Config.JAR_INST_DIR + "/eclipse-ecj.jar");
+        File jar = new File (Config.JAR_INST_DIR);
         if (!jar.exists () || !jar.canRead ())
           {
             System.err.println ("java-gcj-compat: tools.jar: failed to read "
-                                + Config.JAR_INST_DIR + "/eclipse-ecj.jar");
+                                + Config.JAR_INST_DIR);
           }
 
         ClassLoader loader = null;
@@ -71,7 +71,7 @@
         catch (MalformedURLException f)
           {
             System.err.println ("java-gcj-compat: tools.jar: malformed URL for "
-                                + Config.JAR_INST_DIR + "/eclipse-ecj.jar");
+                                + Config.JAR_INST_DIR);
             f.printStackTrace();
           }
 
--- /dev/null	2000-10-22 01:01:00.000000000 +0200
+++ com/sun/tools/javah/Main.java	2006-09-13 01:05:10.000000000 +0200
@@ -0,0 +1,73 @@
+/* Main.java -- implement com.sun.tools.javah.Main
+   Copyright (C) 2004  Red Hat
+
+This file is part of java-gcj-compat.
+
+java-gcj-compat is free software; you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation; either version 2, or (at your option)
+any later version.
+
+java-gcj-compat is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with java-gcj-compat; see the file COPYING.  If not, write to the
+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
+02111-1307 USA.
+
+Linking this library statically or dynamically with other modules is
+making a combined work based on this library.  Thus, the terms and
+conditions of the GNU General Public License cover the whole
+combination.
+
+As a special exception, the copyright holders of this library give you
+permission to link this library with independent modules to produce an
+executable, regardless of the license terms of these independent
+modules, and to copy and distribute the resulting executable under
+terms of your choice, provided that you also meet, for each linked
+independent module, the terms and conditions of the license of that
+module.  An independent module is a module which is not derived from
+or based on this library.  If you modify this library, you may extend
+this exception to your version of the library, but you are not
+obligated to do so.  If you do not wish to do so, delete this
+exception statement from your version. */
+
+package com.sun.tools.javah;
+
+import java.io.*;
+
+public class Main
+{
+  public static void main (String[] args) throws Exception
+  {
+    StringBuffer result = new StringBuffer();
+    String sep = " ";
+
+    if (args.length > 0) {
+      result.append(args[0]);
+
+      for (int i = 1; i < args.length; i++) {
+        result.append(sep);
+        result.append(args[i]);
+      }
+    }
+
+    Runtime run = Runtime.getRuntime();
+    try {
+      Process p = run.exec("javah -v " + result.toString());
+      p.waitFor();
+
+      BufferedReader in = new BufferedReader( new InputStreamReader(p.getInputStream()) );
+      String line;
+
+      while ((line = in.readLine()) != null) {
+        System.out.print(line);
+      }
+    } catch (Exception e) {
+      System.out.println(e.getMessage());
+    }
+  }
+}
