# Copyright 1999-2003 Gentoo Technologies, Inc.
# Distributed under the terms of the GNU General Public License v2
# Author Dmitry S. Kulyabov <dharma@mx.pfu.edu.ru>
# $Header: $

# This eclass sets the site-lisp directory for emacs-related packages.

inherit elisp-common
ECLASS=elisp
INHERITED="$INHERITED $ECLASS"

DEPEND="virtual/emacs"
IUSE="${IUSE} esf"


SITELISPEMACS=/usr/share/emacs/site-lisp

if (use ecf)  
    then
    SITELISP=/usr/share/site-lisp/common/packages
    SITELISPROOT=/usr/share/site-lisp
    SITELISPDOC=/usr/share/site-lisp/doc
#    HOME=${T}
#    mkdir -p ${HOME}/tmp
    # Sandbox issues
    addpredict "/usr/share/info"
    addpredict "/usr/info"    
#    addwrite "/usr/share/info"
#    addwrite "/usr/info"
else
    SITELISP=/usr/share/emacs/site-lisp
fi
  
elisp-install () 
{
    local subdir=$1
    dodir ${SITELISP}/${subdir}
    insinto ${SITELISP}/${subdir}
    shift
    doins $@
}

elisp-site-file-install() 
{
	local sitefile=$1 my_pn=${2:-${PN}}
	pushd ${S}
	cp ${sitefile} ${T}
	sed -i "s:@SITELISP@:${SITELISP}/${my_pn}:g" ${T}/$(basename ${sitefile})
	insinto ${SITELISP}
	doins ${T}/$(basename ${sitefile})
	popd
}


elisp-site-regen () 
{
    einfo "Regenerating ${SITELISP}/site-start.el..."
    einfo ""
    cat <<EOF >${SITELISP}/site-start.el
;;; DO NOT EDIT THIS FILE -- IT IS GENERATED AUTOMATICALLY BY PORTAGE
;;; -----------------------------------------------------------------

EOF
    ls ${SITELISP}/[0-9][0-9]* |sort -n |grep -vE '~$' | \
	while read sf 
      do
      einfo "  Adding $sf..."  
      # Great for debugging, too noisy and slow for users though
# 	echo "(message \"Loading $sf...\")" >>${SITELISP}/site-start.el
      cat $sf >>${SITELISP}/site-start.el
    done
    einfo ""
}

# DEFAULT OVERRIDES

# SRC_URI should be set to wherever the primary app-emacs/ maintainer
# keeps the local elisp mirror, since most app-emacs packages are
# upstream as a single .el file

# SRC_URI="http://cvs.gentoo.org/~mkennedy/app-emacs/${P}.el.bz2"
# S="${WORKDIR}/"
DEPEND="virtual/emacs"
IUSE="ecf"

# src_unpack() 
# {
#     unpack ${A}
#     if [ "${SIMPLE_ELISP}" = 't' ]
# 	then
# 	cd ${S} && mv ${P}.el ${PN}.el
#     fi 
# }

# src_compile() 
# {
#     emacs --batch -f batch-byte-compile --no-site-file --no-init-file *.el || die
# }

# src_install() 
# {
#     elisp-install ${PN} *.el *.elc
#     elisp-site-file-install ${FILESDIR}/${SITEFILE}
# }

elisp_pkg_postinst () 
{
    use ecf || elisp-site-regen
}

elisp_pkg_postrm () 
{
    use ecf || elisp-site-regen
}

EXPORT_FUNCTIONS pkg_postinst pkg_postrm

# Local Variables:
# mode: shell-script
# tab-width: 4
# indent-tabs-mode: t
# End:
