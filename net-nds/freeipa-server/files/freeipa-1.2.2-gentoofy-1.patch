diff --git a/ipa/freeipa-1.2.2/ipa-server/ipaserver/krbinstance.py b/ipa/freeipa-1.2.2/ipa-server/ipaserver/krbinstance.py
--- a/ipa/freeipa-1.2.2/ipa-server/ipaserver/krbinstance.py
+++ b/ipa/freeipa-1.2.2/ipa-server/ipaserver/krbinstance.py
@@ -172,25 +172,25 @@
         self.kpasswd.create_instance()
 
     def __copy_ldap_passwd(self, filename):
-        self.fstore.backup_file("/var/kerberos/krb5kdc/ldappwd")
+        self.fstore.backup_file("/var/lib/krb5kdc/ldappwd")
         shutil.copy(filename, "/var/kerberos/krb5kdc/ldappwd")
         os.chmod("/var/kerberos/krb5kdc/ldappwd", 0600)
 
     def __copy_kpasswd_keytab(self, filename):
-        self.fstore.backup_file("/var/kerberos/krb5kdc/kpasswd.keytab")
-        shutil.copy(filename, "/var/kerberos/krb5kdc/kpasswd.keytab")
-        os.chmod("/var/kerberos/krb5kdc/kpasswd.keytab", 0600)
+        self.fstore.backup_file("/var/lib/krb5kdc/kpasswd.keytab")
+        shutil.copy(filename, "/var/lib/krb5kdc/kpasswd.keytab")
+        os.chmod("/var/lib/krb5kdc/kpasswd.keytab", 0600)
 
 
     def __configure_kdc_account_password(self):
         hexpwd = ''
 	for x in self.kdc_password:
             hexpwd += (hex(ord(x))[2:])
-        self.fstore.backup_file("/var/kerberos/krb5kdc/ldappwd")
-        pwd_fd = open("/var/kerberos/krb5kdc/ldappwd", "w")
+        self.fstore.backup_file("/var/lib/krb5kdc/ldappwd")
+        pwd_fd = open("/var/lib/krb5kdc/ldappwd", "w")
         pwd_fd.write("uid=kdc,cn=sysaccounts,cn=etc,"+self.suffix+"#{HEX}"+hexpwd+"\n")
         pwd_fd.close()
-        os.chmod("/var/kerberos/krb5kdc/ldappwd", 0600)
+        os.chmod("/var/lib/krb5kdc/ldappwd", 0600)
 
     def __enable(self):
         self.backup_state("enabled", self.is_enabled())
@@ -218,7 +218,8 @@
         [pw_fd, pw_name] = tempfile.mkstemp()
         os.write(pw_fd, self.admin_password)
         os.close(pw_fd)
-
+	# Gentoo require test this: openldap vs. 389
+	# ldapmodifu binary locations 
         args = ["/usr/bin/ldapmodify", "-h", "127.0.0.1", "-xv",
                 "-D", "cn=Directory Manager", "-y", pw_name, "-f", fd.name]
 
@@ -304,7 +305,7 @@
         fd.close()
 
     def __create_instance(self, replica=False):
-        self.__template_file("/var/kerberos/krb5kdc/kdc.conf")
+        self.__template_file("/var/lib/krb5kdc/kdc.conf")
         self.__template_file("/etc/krb5.conf")
         self.__template_file("/usr/share/ipa/html/krb5.ini")
         self.__template_file("/usr/share/ipa/html/krb.con")
@@ -312,6 +313,8 @@
 
         if not replica:
             #populate the directory with the realm structure
+	    # slep : kdb5_ldap_util not found in Gentoo , WTF ?
+
             args = ["/usr/kerberos/sbin/kdb5_ldap_util", "-D", "uid=kdc,cn=sysaccounts,cn=etc,"+self.suffix, "-w", self.kdc_password, "create", "-s", "-P", self.master_password, "-r", self.realm, "-subtrees", self.suffix, "-sscope", "sub"]
             try:
                 ipautil.run(args)
@@ -332,7 +335,7 @@
         format = '=hi%ss' % len(keydata)
         s = struct.pack(format, keytype, len(keydata), keydata)
         try:
-            fd = open("/var/kerberos/krb5kdc/.k5."+self.realm, "w")
+            fd = open("/var/lib/krb5kdc/.k5."+self.realm, "w")
             fd.write(s)
             fd.close()
         except os.error, e:
@@ -346,7 +349,7 @@
     def __add_master_key(self):
         #get the Master Key from the stash file
         try:
-            stash = open("/var/kerberos/krb5kdc/.k5."+self.realm, "r")
+            stash = open("/var/lib/krb5kdc/.k5."+self.realm, "r")
             keytype = struct.unpack('h', stash.read(2))[0]
             keylen = struct.unpack('i', stash.read(4))[0]
             keydata = stash.read(keylen)
@@ -377,12 +380,12 @@
 
         self.fstore.backup_file("/etc/dirsrv/ds.keytab")
         installutils.create_keytab("/etc/dirsrv/ds.keytab", ldap_principal)
-
-        self.fstore.backup_file("/etc/sysconfig/dirsrv")
-        update_key_val_in_file("/etc/sysconfig/dirsrv", "export KRB5_KTNAME", "/etc/dirsrv/ds.keytab")
+	
+        self.fstore.backup_file("/etc/conf.d/dirsrv")
+        update_key_val_in_file("/etc/conf.d/dirsrv", "export KRB5_KTNAME", "/etc/dirsrv/ds.keytab")
         pent = pwd.getpwnam(self.ds_user)
         os.chown("/etc/dirsrv/ds.keytab", pent.pw_uid, pent.pw_gid)
-
+	## Chech it in Gentoo ^^ - who work 389 instance ? Use single krb server ?
     def __create_host_keytab(self):
         host_principal = "host/" + self.fqdn + "@" + self.realm
         installutils.kadmin_addprinc(host_principal)
@@ -397,11 +400,11 @@
     def __export_kadmin_changepw_keytab(self):
         installutils.kadmin_modprinc("kadmin/changepw", "+requires_preauth")
 
-        self.fstore.backup_file("/var/kerberos/krb5kdc/kpasswd.keytab")
-        installutils.create_keytab("/var/kerberos/krb5kdc/kpasswd.keytab", "kadmin/changepw")
+        self.fstore.backup_file("/var/lib/krb5kdc/kpasswd.keytab")
+        installutils.create_keytab("/var/lib/krb5kdc/kpasswd.keytab", "kadmin/changepw")
 
-        self.fstore.backup_file("/etc/sysconfig/ipa_kpasswd")
-        update_key_val_in_file("/etc/sysconfig/ipa_kpasswd", "export KRB5_KTNAME", "/var/kerberos/krb5kdc/kpasswd.keytab")
+        self.fstore.backup_file("/etc/conf.d/ipa_kpasswd")
+        update_key_val_in_file("/etc/conf.d/ipa_kpasswd", "export KRB5_KTNAME", "/var/lib/krb5kdc/kpasswd.keytab")
 
     def uninstall(self):
         self.kpasswd.uninstall()
@@ -414,7 +417,7 @@
         except:
             pass
 
-        for f in ["/var/kerberos/krb5kdc/ldappwd", "/var/kerberos/krb5kdc/kdc.conf", "/etc/krb5.conf"]:
+        for f in ["/var/lib/krb5kdc/ldappwd", "/var/lib/krb5kdc/kdc.conf", "/etc/krb5.conf"]:
             try:
                 self.fstore.restore_file(f)
             except ValueError, error:
diff --git a/ipa/freeipa-1.2.2/ipa-server/ipaserver/ntpinstance.py b/ipa/freeipa-1.2.2/ipa-server/ipaserver/ntpinstance.py
--- a/ipa/freeipa-1.2.2/ipa-server/ipaserver/ntpinstance.py
+++ b/ipa/freeipa-1.2.2/ipa-server/ipaserver/ntpinstance.py
@@ -54,13 +54,13 @@
         ntp_sysconf = ipautil.template_file(ipautil.SHARE_DIR + "ntpd.sysconfig.template", {})
 
         self.fstore.backup_file("/etc/ntp.conf")
-        self.fstore.backup_file("/etc/sysconfig/ntpd")
+        self.fstore.backup_file("/etc/conf.d/ntpd")
 
         fd = open("/etc/ntp.conf", "w")
         fd.write(ntp_conf)
         fd.close()
 
-        fd = open("/etc/sysconfig/ntpd", "w")
+        fd = open("/etc/conf.d/ntpd", "w")
         fd.write(ntp_sysconf)
         fd.close()
 
diff --git a/ipa/freeipa-1.2.2/ipa-server/ipaserver/service.py b/ipa/freeipa-1.2.2/ipa-server/ipaserver/service.py
--- a/ipa/freeipa-1.2.2/ipa-server/ipaserver/service.py
+++ b/ipa/freeipa-1.2.2/ipa-server/ipaserver/service.py
@@ -23,34 +23,37 @@
 
 
 def stop(service_name):
-    ipautil.run(["/sbin/service", service_name, "stop"])
+    ipautil.run(["/sbin/rc-service", service_name, "stop"])
 
 def start(service_name):
-    ipautil.run(["/sbin/service", service_name, "start"])
+    ipautil.run(["/sbin/rc-service", service_name, "start"])
 
 def restart(service_name):
-    ipautil.run(["/sbin/service", service_name, "restart"])
+    ipautil.run(["/sbin/rc-service", service_name, "restart"])
 
 def is_running(service_name):
     ret = True
     try:
-        ipautil.run(["/sbin/service", service_name, "status"])
+        ipautil.run(["/sbin/rc-status", service_name, "status"])
     except ipautil.CalledProcessError:
         ret = False
     return ret
 
 def chkconfig_on(service_name):
-    ipautil.run(["/sbin/chkconfig", service_name, "on"])
+    ipautil.run(["/sbin/rc-update", "add", service_name,])
 
 def chkconfig_off(service_name):
-    ipautil.run(["/sbin/chkconfig", service_name, "off"])
+    ipautil.run(["/sbin/rc-update", "del", service_name,])
 
 def chkconfig_add(service_name):
-    ipautil.run(["/sbin/chkconfig", "--add", service_name])
+    ipautil.run(["/sbin/rc-update", "add", service_name])
 
 def chkconfig_del(service_name):
-    ipautil.run(["/sbin/chkconfig", "--del", service_name])
+    ipautil.run(["/sbin/rc-update", "del", service_name])
 
+# FIX Mi
+#Gentoo ,imho, not provide digit runlevel - only named 
+# Who port in Gentoo ? 
 def is_enabled(service_name):
     (stdout, stderr) = ipautil.run(["/sbin/chkconfig", "--list", service_name])
 
